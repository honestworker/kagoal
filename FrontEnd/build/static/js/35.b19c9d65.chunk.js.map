{"version":3,"sources":["containers/elements/text-field/examples/text-field-example.js","containers/elements/text-field/examples/components-example.js","containers/elements/text-field/examples/layout-example.js","containers/elements/text-field/examples/adornments-example.js","containers/elements/text-field/examples/inputs-example.js","containers/elements/text-field/text-field.component.js","containers/elements/text-field/examples/text-field-example-raw.js","containers/elements/text-field/examples/components-example-raw.js","containers/elements/text-field/examples/layout-example-raw.js","containers/elements/text-field/examples/adornments-example-raw.js","containers/elements/text-field/examples/inputs-example-raw.js","components/markdown-element.component.js","components/demo.component.js","../node_modules/@material-ui/icons/VisibilityOff.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js"],"names":["currencies","value","label","TextFields","state","name","age","multiline","currency","handleChange","event","setState","target","classes","this","props","className","container","noValidate","autoComplete","id","textField","onChange","margin","defaultValue","required","error","variant","rowsMax","rows","helperText","placeholder","InputLabelProps","shrink","select","SelectProps","MenuProps","menu","map","option","MenuItem","key","native","fullWidth","React","Component","withStyles","theme","display","flexWrap","marginLeft","spacing","marginRight","width","ComposedTextField","FormControl","formControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","disabled","ranges","InputAdornments","amount","password","weight","weightRange","showPassword","prop","handleMouseDownPassword","preventDefault","handleClickShowPassword","root","classNames","InputProps","startAdornment","InputAdornment","position","withoutLabel","endAdornment","inputProps","type","IconButton","aria-label","onClick","onMouseDown","marginTop","flexBasis","justifyContent","input","TextField","Grid","item","xs","Paper","Typography","gutterBottom","index","js","TextFieldExample","raw","ComponentsExample","LayoutExample","AdornmentsExample","InputsExample","renderer","marked","Renderer","setOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","langPrefix","highlight","code","lang","language","prism","languages","diff","css","jsx","fontFamily","typography","fontSize","color","palette","text","primary","padding","backgroundColor","background","paper","borderRadius","overflow","common","white","textShadow","black","lineHeight","display2","secondary","display1","headline","title","wordBreak","opacity","hint","height","fill","overflowX","borderCollapse","borderSpacing","borderBottom","fontWeight","fontWeightMedium","divider","textAlign","paddingRight","whiteSpace","borderLeft","main","textDecoration","maxWidth","flip","other","dangerouslySetInnerHTML","__html","Demo","codeOpen","codesandboxForm","handleClickCodeOpen","DemoComponent","header","Tooltip","placement","aria-labelledby","Collapse","in","unmountOnExit","dir","demo","marginBottom","clear","breakpoints","up","mixins","gutters","grey","paddingTop","paddingBottom","paddingLeft","zIndex","top","right","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","createElement","Fragment","d","forwardRef","ref","children","_props$component","component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","muiFormControl","Provider","hiddenLabel","filled","start","positionStart","end","positionEnd","dense","marginDense","maxHeight","alignItems","pointerEvents"],"mappings":"gQAqBMA,EAAa,CACjB,CACEC,MAAO,MACPC,MAAO,KAET,CACED,MAAO,MACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,SAILC,E,2MACJC,MAAQ,CACNC,KAAM,iBACNC,IAAK,GACLC,UAAW,aACXC,SAAU,O,EAGZC,aAAe,SAAAJ,GAAI,OAAI,SAACK,GACtB,EAAKC,SAAL,eACGN,EAAOK,EAAME,OAAOX,U,wEAIf,IACAY,EAAYC,KAAKC,MAAjBF,QAER,OACE,0BAAMG,UAAWH,EAAQI,UAAWC,YAAU,EAACC,aAAa,OAC1D,kBAAC,IAAD,CACEC,GAAG,OACHlB,MAAM,OACNc,UAAWH,EAAQQ,UACnBpB,MAAOa,KAAKV,MAAMC,KAClBiB,SAAUR,KAAKL,aAAa,QAC5Bc,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,eACHlB,MAAM,eACNsB,aAAa,MACbR,UAAWH,EAAQQ,UACnBE,OAAO,WAET,kBAAC,IAAD,CACEE,UAAQ,EACRL,GAAG,WACHlB,MAAM,WACNsB,aAAa,cACbR,UAAWH,EAAQQ,UACnBE,OAAO,WAET,kBAAC,IAAD,CACEG,OAAK,EACLN,GAAG,QACHlB,MAAM,QACNsB,aAAa,cACbR,UAAWH,EAAQQ,UACnBE,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,WACHlB,MAAM,WACNc,UAAWH,EAAQQ,UACnBM,QAAQ,WACRR,aAAa,mBACbI,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,qBACHlB,MAAM,YACNK,WAAS,EACTqB,QAAQ,IACR3B,MAAOa,KAAKV,MAAMG,UAClBe,SAAUR,KAAKL,aAAa,aAC5BO,UAAWH,EAAQQ,UACnBE,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,mBACHlB,MAAM,YACNK,WAAS,EACTsB,KAAK,IACLL,aAAa,gBACbR,UAAWH,EAAQQ,UACnBE,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,aACHlB,MAAM,cACNsB,aAAa,gBACbR,UAAWH,EAAQQ,UACnBS,WAAW,sBACXP,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,mBACHlB,MAAM,mBACN6B,YAAY,cACZf,UAAWH,EAAQQ,UACnBE,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,WACHlB,MAAM,6BACN6B,YAAY,cACZxB,WAAS,EACTS,UAAWH,EAAQQ,UACnBE,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,SACHlB,MAAM,SACND,MAAOa,KAAKV,MAAME,IAClBgB,SAAUR,KAAKL,aAAa,OAC5BkB,QAAQ,SACRX,UAAWH,EAAQQ,UACnBW,gBAAiB,CACfC,QAAQ,GAEVV,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,SACHlB,MAAM,eACNyB,QAAQ,SACRX,UAAWH,EAAQQ,UACnBE,OAAO,WAET,kBAAC,IAAD,CACEH,GAAG,kBACHc,QAAM,EACNhC,MAAM,SACNc,UAAWH,EAAQQ,UACnBpB,MAAOa,KAAKV,MAAMI,SAClBc,SAAUR,KAAKL,aAAa,YAC5B0B,YAAa,CACXC,UAAW,CACTpB,UAAWH,EAAQwB,OAGvBP,WAAW,8BACXP,OAAO,UAENvB,EAAWsC,IAAI,SAAAC,GAAM,OACpB,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOtC,MAAOA,MAAOsC,EAAOtC,OACxCsC,EAAOrC,UAId,kBAAC,IAAD,CACEkB,GAAG,yBACHc,QAAM,EACNhC,MAAM,gBACNc,UAAWH,EAAQQ,UACnBpB,MAAOa,KAAKV,MAAMI,SAClBc,SAAUR,KAAKL,aAAa,YAC5B0B,YAAa,CACXO,QAAQ,EACRN,UAAW,CACTpB,UAAWH,EAAQwB,OAGvBP,WAAW,8BACXP,OAAO,UAENvB,EAAWsC,IAAI,SAAAC,GAAM,OACpB,4BAAQE,IAAKF,EAAOtC,MAAOA,MAAOsC,EAAOtC,OACtCsC,EAAOrC,UAId,kBAAC,IAAD,CACEkB,GAAG,aACHlB,MAAM,QACN8B,gBAAiB,CACfC,QAAQ,GAEVF,YAAY,cACZD,WAAW,cACXa,WAAW,EACXhB,QAAQ,WACRJ,OAAO,gB,GA5KQqB,IAAMC,WAuLhBC,cAzNA,SAAAC,GAAK,MAAK,CACvB9B,UAAW,CACT+B,QAAS,OACTC,SAAU,QAEZ5B,UAAW,CACT6B,WAAYH,EAAMI,QAAQ,GAC1BC,YAAaL,EAAMI,QAAQ,GAC3BE,MAAO,KAEThB,KAAM,CACJgB,MAAO,OA8MIP,CAAmB3C,G,sCC7M5BmD,E,2MACJlD,MAAQ,CACNC,KAAM,sB,EAGRI,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEN,KAAMK,EAAME,OAAOX,S,wEAG3B,IACAY,EAAYC,KAAKC,MAAjBF,QAER,OACE,yBAAKG,UAAWH,EAAQI,WACtB,kBAACsC,EAAA,EAAD,CAAavC,UAAWH,EAAQ2C,aAC9B,kBAACC,EAAA,EAAD,CAAYC,QAAQ,eAApB,QACA,kBAACC,EAAA,EAAD,CAAOvC,GAAG,cAAcnB,MAAOa,KAAKV,MAAMC,KAAMiB,SAAUR,KAAKL,gBAEjE,kBAAC8C,EAAA,EAAD,CAAavC,UAAWH,EAAQ2C,YAAaI,mBAAiB,oBAC5D,kBAACH,EAAA,EAAD,CAAYC,QAAQ,eAApB,QACA,kBAACC,EAAA,EAAD,CAAOvC,GAAG,cAAcnB,MAAOa,KAAKV,MAAMC,KAAMiB,SAAUR,KAAKL,eAC/D,kBAACoD,EAAA,EAAD,CAAgBzC,GAAG,oBAAnB,+BAEF,kBAACmC,EAAA,EAAD,CAAavC,UAAWH,EAAQ2C,YAAaM,UAAQ,GACnD,kBAACL,EAAA,EAAD,CAAYC,QAAQ,iBAApB,QACA,kBAACC,EAAA,EAAD,CAAOvC,GAAG,gBAAgBnB,MAAOa,KAAKV,MAAMC,KAAMiB,SAAUR,KAAKL,eACjE,kBAACoD,EAAA,EAAD,kBAEF,kBAACN,EAAA,EAAD,CAAavC,UAAWH,EAAQ2C,YAAa9B,OAAK,EAACkC,mBAAiB,mBAClE,kBAACH,EAAA,EAAD,CAAYC,QAAQ,cAApB,QACA,kBAACC,EAAA,EAAD,CAAOvC,GAAG,aAAanB,MAAOa,KAAKV,MAAMC,KAAMiB,SAAUR,KAAKL,eAC9D,kBAACoD,EAAA,EAAD,CAAgBzC,GAAG,mBAAnB,e,GA/BsBwB,IAAMC,WA0CvBC,cApDA,SAAAC,GAAK,MAAK,CACvB9B,UAAW,CACT+B,QAAS,OACTC,SAAU,QAEZO,YAAa,CACXjC,OAAQwB,EAAMI,QAAQ,MA8CXL,CAAmBQ,GCPnBR,cAhDA,SAAAC,GAAK,MAAK,CACvB9B,UAAW,CACT+B,QAAS,OACTC,SAAU,QAEZ5B,UAAW,CACT6B,WAAYH,EAAMI,QAAQ,GAC1BC,YAAaL,EAAMI,QAAQ,GAC3BE,MAAO,OAwCIP,CApCU,SAAC/B,GAAW,IAC3BF,EAAYE,EAAZF,QAER,OACE,yBAAKG,UAAWH,EAAQI,WACtB,kBAAC,IAAD,CACEf,MAAM,OACNkB,GAAG,cACHI,aAAa,gBACbR,UAAWH,EAAQQ,UACnBS,WAAW,wBAEb,kBAAC,IAAD,CACE5B,MAAM,QACNkB,GAAG,eACHI,aAAa,gBACbR,UAAWH,EAAQQ,UACnBS,WAAW,sBACXP,OAAO,UAET,kBAAC,IAAD,CACErB,MAAM,SACNkB,GAAG,gBACHI,aAAa,gBACbR,UAAWH,EAAQQ,UACnBS,WAAW,sBACXP,OAAO,c,uECZTwC,EAAS,CACb,CACE9D,MAAO,OACPC,MAAO,WAET,CACED,MAAO,QACPC,MAAO,YAET,CACED,MAAO,SACPC,MAAO,cAIL8D,E,2MACJ5D,MAAQ,CACN6D,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,cAAc,G,EAGhB5D,aAAe,SAAA6D,GAAI,OAAI,SAAA5D,GACrB,EAAKC,SAAL,eAAiB2D,EAAO5D,EAAME,OAAOX,U,EAGvCsE,wBAA0B,SAAA7D,GACxBA,EAAM8D,kB,EAGRC,wBAA0B,WACxB,EAAK9D,SAAS,CAAE0D,cAAe,EAAKjE,MAAMiE,gB,wEAGlC,IACAxD,EAAYC,KAAKC,MAAjBF,QAER,OACE,yBAAKG,UAAWH,EAAQ6D,MACtB,kBAAC,IAAD,CACExE,MAAM,wBACNkB,GAAG,yBACHJ,UAAW2D,IAAW9D,EAAQU,OAAQV,EAAQQ,WAC9CuD,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,SAGpB,kBAAC,IAAD,CACE7C,QAAM,EACNhC,MAAM,cACNc,UAAW2D,IAAW9D,EAAQU,OAAQV,EAAQQ,WAC9CpB,MAAOa,KAAKV,MAAMgE,YAClB9C,SAAUR,KAAKL,aAAa,eAC5BmE,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,QAGjBhB,EAAOzB,IAAI,SAAAC,GAAM,OAChB,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOtC,MAAOA,MAAOsC,EAAOtC,OACxCsC,EAAOrC,UAId,kBAACqD,EAAA,EAAD,CAAaZ,WAAW,EAAM3B,UAAWH,EAAQU,QAC/C,kBAACkC,EAAA,EAAD,CAAYC,QAAQ,oBAApB,UACA,kBAACC,EAAA,EAAD,CACEvC,GAAG,mBACHnB,MAAOa,KAAKV,MAAM6D,OAClB3C,SAAUR,KAAKL,aAAa,UAC5BoE,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,QAGpB,kBAACxB,EAAA,EAAD,CACEvC,UAAW2D,IAAW9D,EAAQU,OAAQV,EAAQmE,aAAcnE,EAAQQ,WACpEuC,mBAAiB,sBAEjB,kBAACD,EAAA,EAAD,CACEvC,GAAG,mBACHnB,MAAOa,KAAKV,MAAM+D,OAClB7C,SAAUR,KAAKL,aAAa,UAC5BwE,aAAc,kBAACH,EAAA,EAAD,CAAgBC,SAAS,OAAzB,MACdG,WAAY,CACV,aAAc,YAGlB,kBAACrB,EAAA,EAAD,CAAgBzC,GAAG,sBAAnB,WAEF,kBAACmC,EAAA,EAAD,CAAavC,UAAW2D,IAAW9D,EAAQU,OAAQV,EAAQQ,YACzD,kBAACoC,EAAA,EAAD,CAAYC,QAAQ,sBAApB,YACA,kBAACC,EAAA,EAAD,CACEvC,GAAG,qBACH+D,KAAMrE,KAAKV,MAAMiE,aAAe,OAAS,WACzCpE,MAAOa,KAAKV,MAAM8D,SAClB5C,SAAUR,KAAKL,aAAa,YAC5BwE,aACE,kBAACH,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACK,EAAA,EAAD,CACEC,aAAW,6BACXC,QAASxE,KAAK2D,wBACdc,YAAazE,KAAKyD,yBAEjBzD,KAAKV,MAAMiE,aAAe,kBAAC,IAAD,MAAoB,kBAAC,IAAD,gB,GAxFnCzB,IAAMC,WAuGrBC,cAtIA,SAAAC,GAAK,MAAK,CACvB2B,KAAM,CACJ1B,QAAS,OACTC,SAAU,QAEZ1B,OAAQ,CACNA,OAAQwB,EAAMI,QAAQ,IAExB6B,aAAc,CACZQ,UAAWzC,EAAMI,QAAQ,IAE3B9B,UAAW,CACToE,UAAW,OA0HA3C,CAAmBkB,GC3FnBlB,kBArDA,SAAAC,GAAK,MAAK,CACvB9B,UAAW,CACT+B,QAAS,OACTC,SAAU,OACVyC,eAAgB,UAElBC,MAAO,CACLpE,OAAQwB,EAAMI,QAAQ,MA8CXL,CA1Cf,SAAgB/B,GAAQ,IACdF,EAAYE,EAAZF,QACR,OACE,yBAAKG,UAAWH,EAAQI,WACtB,kBAAC0C,EAAA,EAAD,CACEnC,aAAa,cACbR,UAAWH,EAAQ8E,MACnBT,WAAY,CACV,aAAc,iBAGlB,kBAACvB,EAAA,EAAD,CACE5B,YAAY,cACZf,UAAWH,EAAQ8E,MACnBT,WAAY,CACV,aAAc,iBAGlB,kBAACvB,EAAA,EAAD,CACE1D,MAAM,WACNe,UAAWH,EAAQ8E,MACnB7B,UAAQ,EACRoB,WAAY,CACV,aAAc,iBAGlB,kBAACvB,EAAA,EAAD,CACEnC,aAAa,QACbR,UAAWH,EAAQ8E,MACnBjE,OAAK,EACLwD,WAAY,CACV,aAAc,oBC+BTU,UAzDG,kBAChB,6BACE,6BAAS5E,UAAU,wBACjB,yBAAKA,UAAU,6BACb,kBAAC,EAAD,QAGJ,kBAAC6E,EAAA,EAAD,CAAM5E,WAAS,EAACkC,QAAS,GACvB,kBAAC0C,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACf,kBAACF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAOhF,UAAU,+BACf,kBAACiF,EAAA,EAAD,CAAYtE,QAAQ,KAAKuE,cAAY,GAArC,eACA,gKAIA,yCACA,kCAAO,2CAAP,yFACA,kBAAC,IAAD,CAAMC,MAAO,EAAGC,GAAIC,EAAkBC,ICtClC,wlLDuCJ,0CACA,2BACE,2CADF,uCAC4D,6CAD5D,KACsF,4CADtF,IAEE,uCAFF,SAE0B,gDAF1B,iFAKA,qHAEE,2CAFF,iMAIE,4CAJF,SAI+B,4CAJ/B,KAIwD,iDAJxD,uDAOA,kBAAC,IAAD,CAAMH,MAAO,EAAGC,GAAIG,EAAmBD,IEpDnC,2rEFqDJ,sCACA,2BACE,2CADF,KAC0B,6CAD1B,qFAEoC,sCAFpC,2CAGE,6CAHF,aAGoC,uCAHpC,QAG2D,wCAH3D,kEAMA,kBAAC,IAAD,CAAMH,MAAO,EAAGC,GAAII,EAAeF,IG5D/B,8yCH6DJ,gDACA,2BACE,uCADF,4BAC6C,gDAD7C,2EAIA,kBAAC,IAAD,CAAMH,MAAO,EAAGC,GAAIK,EAAmBH,IIlEnC,ijJJmEJ,sCACA,kBAAC,IAAD,CAAMH,MAAO,EAAGC,GAAIM,EAAeJ,IKpE/B,sxCLuER,kBAACT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,Q,izBMzDrB,IAAMY,EAAW,IAAIC,IAAOC,SAC5BD,IAAOE,WAAW,CAChBC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,EAEbC,WAAY,YACZC,UAVgB,SAUNC,EAAMC,GACd,IAAIC,EACJ,OAAQD,GACR,IAAK,OACHC,EAAWC,IAAMC,UAAUC,KAC3B,MAEF,IAAK,MACHH,EAAWC,IAAMC,UAAUE,IAC3B,MAEF,IAAK,KACL,IAAK,MACL,QACEJ,EAAWC,IAAMC,UAAUG,IAG7B,OAAOJ,IAAMJ,UAAUC,EAAME,IAE/Bf,aAqMa7D,kBAjMA,SAAAC,GAAK,MAAK,CACvB2B,KAAM,CACJsD,WAAYjF,EAAMkF,WAAWD,WAC7BE,SAAU,GACVC,MAAOpF,EAAMqF,QAAQC,KAAKC,QAC1B,iBAAkB,CAChB9C,WAAYzC,EAAMI,QAAQ,IAC1B4B,SAAU,YAEZ,mCAAoC,CAClCxD,OAAO,GAAD,OAAKwB,EAAMI,QAAQ,GAAnB,QACNoF,QAAS,YACTC,gBAAiBzF,EAAMqF,QAAQK,WAAWC,MAC1CC,aAAc,EACdC,SAAU,QAEZ,6BAA8B,CAC5BT,MAA8B,UAAvBpF,EAAMqF,QAAQjD,KAAmBpC,EAAMqF,QAAQC,KAAKC,QAAUvF,EAAMqF,QAAQS,OAAOC,MAC1FC,WAAW,SAAD,OAAkC,UAAvBhG,EAAMqF,QAAQjD,KAAmBpC,EAAMqF,QAAQS,OAAOC,MAAQ/F,EAAMqF,QAAQS,OAAOG,QAE1G,eAAgB,CACdb,MAA8B,UAAvBpF,EAAMqF,QAAQjD,KAAmB,OAAS,WAEnD,qBAAsB,CACpBgD,MAA8B,UAAvBpF,EAAMqF,QAAQjD,KAAmB,OAAS,WAEnD,kCAAmC,CACjC+C,SAAU,GACVe,WAAY,KAEd,OAAO,EAAP,GACKlG,EAAMkF,WAAWiB,SADtB,CAEEf,MAAOpF,EAAMqF,QAAQC,KAAKc,UAC1B5H,OAAQ,YAEV,OAAO,EAAP,GACKwB,EAAMkF,WAAWmB,SADtB,CAEEjB,MAAOpF,EAAMqF,QAAQC,KAAKc,UAC1B5H,OAAQ,gBAEV,OAAO,EAAP,GACKwB,EAAMkF,WAAWoB,SADtB,CAEElB,MAAOpF,EAAMqF,QAAQC,KAAKc,UAC1B5H,OAAQ,gBAEV,OAAO,EAAP,GACKwB,EAAMkF,WAAWqB,MADtB,CAEEnB,MAAOpF,EAAMqF,QAAQC,KAAKc,UAC1B5H,OAAQ,gBAEV,kBAAmB,CACjB0H,WAAY,KAEd,yBAA0B,CACxB,SAAU,CACRf,SAAU,UACVe,WAAY,UAEZM,UAAW,cAEb,uBAAwB,CACtBC,QAAS,EAETxG,QAAS,QAEX,6BAA8B,CAC5BA,QAAS,eACTwG,QAAS,EACTjB,QAAQ,KAAD,OAAOxF,EAAMI,QAAQ,GAArB,MACPgF,MAAOpF,EAAMqF,QAAQC,KAAKoB,KAC1B,UAAW,CACTtB,MAAOpF,EAAMqF,QAAQC,KAAKc,WAE5B,QAAS,CACP9F,MAAO,SACPqG,OAAQ,SACRC,KAAM,kBAIZ,UAAW,CACTtG,MAAO,OACPL,QAAS,QACT4G,UAAW,OACXC,eAAgB,WAChBC,cAAe,EACflB,SAAU,SACV,eAAgB,CACdV,SAAU,GACVF,WAAY,iDAEd,cAAe,CACbG,MAA8B,UAAvBpF,EAAMqF,QAAQjD,KAAmB,UAAY,WAEtD,eAAgB,CACd+C,SAAU,GACVF,WAAY,gDACZG,MAA8B,UAAvBpF,EAAMqF,QAAQjD,KAAmB,UAAY,WAEtD,kBAAmB,CACjB+C,SAAU,GACVF,WAAY,gDACZ+B,aAAa,cAAD,OAAgBhH,EAAMqF,QAAQC,KAAKoB,QAGnD,UAAW,CACTvB,SAAU,GACV8B,WAAYjH,EAAMkF,WAAWgC,iBAC7B9B,MAAOpF,EAAMqF,QAAQC,KAAKc,WAE5B,UAAW,CACTjB,SAAU,GACVe,WAAY,IACZd,MAAOpF,EAAMqF,QAAQC,KAAKC,SAE5B,OAAQ,CACNyB,aAAa,aAAD,OAAehH,EAAMqF,QAAQ8B,SACzC3B,QAAQ,GAAD,OAAKxF,EAAMI,QAAQ,GAAnB,cAA2BJ,EAAMI,QAAQ,GAAzC,cAAiDJ,EAAMI,QAAQ,GAA/D,cACLJ,EAAMI,QAAQ,GADT,MAGPgH,UAAW,QAEb,kBAAmB,CACjBC,aAAcrH,EAAMI,QAAQ,IAE9B,eAAgB,CACdiH,aAAcrH,EAAMI,QAAQ,IAE9B,YAAa,CACX+E,SAAU,GACVe,WAAY,KAEd,OAAQ,CACNoB,WAAY,MACZN,aAAa,aAAD,OAAehH,EAAMqF,QAAQ8B,SACzCF,WAAYjH,EAAMkF,WAAWgC,iBAC7B1B,QAAQ,KAAD,OAAOxF,EAAMI,QAAQ,GAArB,gBAA+BJ,EAAMI,QAAQ,GAA7C,MACPgH,UAAW,QAEb,kBAAmB,CACjBC,aAAcrH,EAAMI,QAAQ,IAE9B,OAAQ,CACNuG,OAAQ,IAEV,aAAc,CACZA,OAAQ,IAEV,WAAY,CACVM,WAAYjH,EAAMkF,WAAWgC,kBAE/B,eAAgB,CACdK,WAAW,aAAD,OAAevH,EAAMqF,QAAQC,KAAKoB,MAC5CjB,gBAAiBzF,EAAMqF,QAAQK,WAAWC,MAC1CH,QAAQ,GAAD,OAAKxF,EAAMI,QAAQ,GAAK,EAAxB,cAA+BJ,EAAMI,QAAQ,GAA7C,MACP5B,OAAO,GAAD,OAAKwB,EAAMI,QAAQ,GAAnB,SAER,gBAAiB,CAEfgF,MAAOpF,EAAMqF,QAAQe,UAAUoB,KAC/BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,cAGpB,QAAS,CACPC,SAAU,WA2BkB,CAAEC,MAAM,GAA3B5H,CAtBf,SAAyB/B,GAAQ,IAE7BF,EACEE,EADFF,QAASG,EACPD,EADOC,UAAWqH,EAClBtH,EADkBsH,KAASsC,EAFD,YAG1B5J,EAH0B,gCAM9B,OACE,uCACEC,UAAW2D,IAAW9D,EAAQ6D,KAAM,gBAAiB1D,GACrD4J,wBAAyB,CAAEC,OAAQjE,IAAOyB,KACtCsC,MCvKJG,E,2MACJ1K,MAAQ,CACN2K,UAAU,G,EAGZC,gBAAkB,K,EAElBC,oBAAsB,WACpB,EAAKtK,SAAS,CACZoK,UAAW,EAAK3K,MAAM2K,Y,wEAIhB,IAAD,EAGHjK,KAAKC,MADPF,EAFK,EAELA,QAASsF,EAFJ,EAEIA,MAAW+E,EAFf,EAEW9E,GAAmBE,EAF9B,EAE8BA,IAE7ByE,EAAajK,KAAKV,MAAlB2K,SAER,OACE,yBAAK/J,UAAWH,EAAQ6D,MACtB,yBAAK1D,UAAWH,EAAQsK,QAEtB,kBAACC,EAAA,EAAD,CACEhK,GAAE,sBAAiB+E,GACnBmD,MAAOyB,EAAW,kBAAoB,kBACtCM,UAAU,OAEV,kBAACjG,EAAA,EAAD,CAAYE,QAASxE,KAAKmK,oBAAqBK,kBAAA,sBAAgCnF,IAC7E,kBAAC,IAAD,SAIN,kBAACoF,EAAA,EAAD,CAAUC,GAAIT,EAAUU,eAAa,GACnC,kBAAC,EAAD,CAAiBC,IAAI,MAAM1K,UAAWH,EAAQ2G,KAAMa,KAAI,kBAAgB/B,EAAhB,YAE1D,yBAAKtF,UAAWH,EAAQ8K,MACtB,kBAACT,EAAD,Y,GArCStI,IAAMC,WAmDVC,gBAxGA,SAAAC,GAAK,YAAK,CACvB2B,KAAK,aACHK,SAAU,WACV6G,aAAc,GACd1I,YAAaH,EAAMI,QAAQ,GAC3BC,aAAcL,EAAMI,QAAQ,GAC5B0I,MAAO,QACN9I,EAAM+I,YAAYC,GAAG,MAAQ,CAC5BxD,QAAQ,KAAD,OAAOxF,EAAMI,QAAQ,GAArB,MACPD,WAAY,EACZE,YAAa,IAGjBuI,KAAM5I,EAAMiJ,OAAOC,QAAb,aACJzD,gBACyB,UAAvBzF,EAAMqF,QAAQjD,KAAmBpC,EAAMqF,QAAQ8D,KAAK,KAAOnJ,EAAMqF,QAAQ8D,KAAK,KAChFlJ,QAAS,OACT0C,eAAgB,SAChByG,WAAYpJ,EAAMI,QAAQ,GAC1BiJ,cAAerJ,EAAMI,QAAQ,IAC5BJ,EAAM+I,YAAYC,GAAG,MAAQ,CAC5BM,YAAatJ,EAAMI,QAAQ,GAC3BiH,aAAcrH,EAAMI,QAAQ,GAC5BgJ,WAAYpJ,EAAMI,QAAQ,MAG9BgI,OAAO,aACLnI,QAAS,QACRD,EAAM+I,YAAYC,GAAG,MAAQ,CAC5B/I,QAAS,OACT0H,MAAM,EACN4B,OAAQ,GACRvH,SAAU,WACVwH,IAAK,EACLC,MAAOzJ,EAAMI,QAAQ,KAGzBqE,MAAI,GACFxE,QAAS,OACTuF,QAAS,EACThH,OAAQ,GAHN,cAIDwB,EAAM+I,YAAYC,GAAG,MAAQ,CAC5B/I,QAAS,UALT,cAOF,QAAS,CACP4F,SAAU,OACVrH,OAAQ,iBACRoH,aAAc,mBAVd,KAmES7F,CAAmBgI,I,iCChHlC,IAAI2B,EAAyB,EAAQ,GAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3C3M,OAAO,IAET2M,EAAQC,aAAU,EAElB,IAAIC,EAASL,EAAuB,EAAQ,IAIxCM,GAAW,EAFMN,EAAuB,EAAQ,KAElBI,SAASC,EAAOD,QAAQG,cAAcF,EAAOD,QAAQI,SAAU,KAAMH,EAAOD,QAAQG,cAAc,OAAQ,CAC1IrD,KAAM,OACNuD,EAAG,kBACDJ,EAAOD,QAAQG,cAAc,OAAQ,CACvCE,EAAG,+fACA,iBAELN,EAAQC,QAAUE,G,iCClBlB,IAAIN,EAAyB,EAAQ,GAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3C3M,OAAO,IAET2M,EAAQC,aAAU,EAElB,IAAIC,EAASL,EAAuB,EAAQ,IAIxCM,GAAW,EAFMN,EAAuB,EAAQ,KAElBI,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EE,EAAG,sNACD,cAEJN,EAAQC,QAAUE,G,iCCjBlB,gFA+CIjI,EAAiB,IAAMqI,WAAW,SAAwBpM,EAAOqM,GACnE,IAAIC,EAAWtM,EAAMsM,SACjBxM,EAAUE,EAAMF,QAChBG,EAAYD,EAAMC,UAClBsM,EAAmBvM,EAAMwM,UACzB1K,OAAiC,IAArByK,EAA8B,MAAQA,EAClDE,EAAwBzM,EAAM0M,qBAC9BA,OAAiD,IAA1BD,GAA2CA,EAClEE,EAAwB3M,EAAM4M,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/D3I,EAAWhE,EAAMgE,SACjB6I,EAAc7M,EAAMY,QACpBgJ,EAAQ,YAAyB5J,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,YAEnJ8M,EAAiB,eAAoB,GACrClM,EAAUiM,EAUd,OARIA,GAAeC,EAAelM,QAI9BkM,IAAmBlM,IACrBA,EAAUkM,EAAelM,SAGpB,IAAMqL,cAAc,IAAmBc,SAAU,CACtD7N,MAAO,MACN,IAAM+M,cAAcnK,EAAW,YAAS,CACzC7B,UAAW,kBAAKH,EAAQ6D,KAAM1D,EAAWyM,GAAwB5M,EAAQ4M,qBAAsBI,EAAeE,aAAelN,EAAQkN,YAAa,CAChJC,OAAQnN,EAAQmN,QAChBrM,GAAU,CACVsM,MAAOpN,EAAQqN,cACfC,IAAKtN,EAAQuN,aACbrJ,GAAW,CACXsJ,MAAOxN,EAAQyN,aACfT,EAAetM,SACjB6L,IAAKA,GACJzC,GAA4B,kBAAb0C,GAA0BM,EAE7BN,EAFiD,IAAML,cAAc,IAAY,CAC9F7E,MAAO,iBACNkF,OAqDU,gBAlIK,CAElB3I,KAAM,CACJ1B,QAAS,OACT0G,OAAQ,SAER6E,UAAW,MACXC,WAAY,UAIdR,OAAQ,CACN,oCAAqC,CACnCxI,UAAW,KAKf0I,cAAe,CACb9K,YAAa,GAIfgL,YAAa,CACXlL,WAAY,GAIduK,qBAAsB,CACpBgB,cAAe,QAIjBV,YAAa,GAGbO,YAAa,IA8FmB,CAChCjO,KAAM,qBADO,CAEZyE","file":"static/js/35.b19c9d65.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  menu: {\n    width: 200\n  }\n});\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$'\n  },\n  {\n    value: 'EUR',\n    label: '€'\n  },\n  {\n    value: 'BTC',\n    label: '฿'\n  },\n  {\n    value: 'JPY',\n    label: '¥'\n  }\n];\n\nclass TextFields extends React.Component {\n  state = {\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR'\n  };\n\n  handleChange = name => (event) => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"uncontrolled\"\n          label=\"Uncontrolled\"\n          defaultValue=\"foo\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          required\n          id=\"required\"\n          label=\"Required\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          error\n          id=\"error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"password\"\n          label=\"Password\"\n          className={classes.textField}\n          variant=\"password\"\n          autoComplete=\"current-password\"\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"multiline-flexible\"\n          label=\"Multiline\"\n          multiline\n          rowsMax=\"4\"\n          value={this.state.multiline}\n          onChange={this.handleChange('multiline')}\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"multiline-static\"\n          label=\"Multiline\"\n          multiline\n          rows=\"4\"\n          defaultValue=\"Default Value\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"helperText\"\n          label=\"Helper text\"\n          defaultValue=\"Default Value\"\n          className={classes.textField}\n          helperText=\"Some important text\"\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"with-placeholder\"\n          label=\"With placeholder\"\n          placeholder=\"Placeholder\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"textarea\"\n          label=\"With placeholder multiline\"\n          placeholder=\"Placeholder\"\n          multiline\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"number\"\n          label=\"Number\"\n          value={this.state.age}\n          onChange={this.handleChange('age')}\n          variant=\"number\"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"search\"\n          label=\"Search field\"\n          variant=\"search\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"select-currency\"\n          select\n          label=\"Select\"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange('currency')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"select-currency-native\"\n          select\n          label=\"Native select\"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange('currency')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id=\"full-width\"\n          label=\"Label\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          placeholder=\"Placeholder\"\n          helperText=\"Full width!\"\n          fullWidth={true}\n          variant=\"outlined\"\n          margin=\"normal\"\n        />\n      </form>\n    );\n  }\n}\n\nTextFields.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(TextFields);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n});\n\nclass ComposedTextField extends React.Component {\n  state = {\n    name: 'Composed TextField'\n  };\n\n  handleChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"name-simple\">Name</InputLabel>\n          <Input id=\"name-simple\" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n        <FormControl className={classes.formControl} aria-describedby=\"name-helper-text\">\n          <InputLabel htmlFor=\"name-helper\">Name</InputLabel>\n          <Input id=\"name-helper\" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText id=\"name-helper-text\">Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\n          <Input id=\"name-disabled\" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error aria-describedby=\"name-error-text\">\n          <InputLabel htmlFor=\"name-error\">Name</InputLabel>\n          <Input id=\"name-error\" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText id=\"name-error-text\">Error</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nComposedTextField.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(ComposedTextField);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n});\n\nconst TextFieldMargins = (props) => {\n  const { classes } = props;\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        label=\"None\"\n        id=\"margin-none\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n      />\n      <TextField\n        label=\"Dense\"\n        id=\"margin-dense\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"dense\"\n      />\n      <TextField\n        label=\"Normal\"\n        id=\"margin-normal\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n      />\n    </div>\n  );\n};\n\nTextFieldMargins.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(TextFieldMargins);\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass InputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  handleClickShowPassword = () => {\n    this.setState({ showPassword: !this.state.showPassword });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          label=\"With normal TextField\"\n          id=\"simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n        <TextField\n          select\n          label=\"With Select\"\n          className={classNames(classes.margin, classes.textField)}\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <FormControl fullWidth={true} className={classes.margin}>\n          <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n          <Input\n            id=\"adornment-amount\"\n            value={this.state.amount}\n            onChange={this.handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n        <FormControl\n          className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\n          aria-describedby=\"weight-helper-text\"\n        >\n          <Input\n            id=\"adornment-weight\"\n            value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n            inputProps={{\n              'aria-label': 'Weight',\n            }}\n          />\n          <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n        </FormControl>\n        <FormControl className={classNames(classes.margin, classes.textField)}>\n          <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n          <Input\n            id=\"adornment-password\"\n            type={this.state.showPassword ? 'text' : 'password'}\n            value={this.state.password}\n            onChange={this.handleChange('password')}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                  onMouseDown={this.handleMouseDownPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputAdornments);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  input: {\n    margin: theme.spacing(1)\n  }\n});\n\nfunction Inputs(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue=\"Hello world\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description'\n        }}\n      />\n      <Input\n        placeholder=\"Placeholder\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description'\n        }}\n      />\n      <Input\n        value=\"Disabled\"\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'Description'\n        }}\n      />\n      <Input\n        defaultValue=\"Error\"\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'Description'\n        }}\n      />\n    </div>\n  );\n}\n\nInputs.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(Inputs);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Demo from '../../../components/demo.component';\n\nimport TextFieldExample from './examples/text-field-example';\nimport TextFieldExampleRaw from './examples/text-field-example-raw';\n\nimport ComponentsExample from './examples/components-example';\nimport ComponentsExampleRaw from './examples/components-example-raw';\n\nimport LayoutExample from './examples/layout-example';\nimport LayoutExampleRaw from './examples/layout-example-raw';\n\nimport AdornmentsExample from './examples/adornments-example';\nimport AdornmentsExampleRaw from './examples/adornments-example-raw';\n\nimport InputsExample from './examples/inputs-example';\nimport InputsExampleRaw from './examples/inputs-example-raw';\n\nconst TextField = () => (\n  <div>\n    <section className=\"portal-pages__header\">\n      <div className=\"portal-pages__header-demo\">\n        <InputsExample />\n      </div>\n    </section>\n    <Grid container spacing={0}>\n      <Grid item xs={1} />\n      <Grid item xs={10}>\n        <Paper className=\"portal-pages__content-inner\">\n          <Typography variant=\"h6\" gutterBottom>Text Fields</Typography>\n          <p>\n            Text fields allow users to input text and usually appear in forms. Users may enter text, numbers,\n            or mixed-format types of input.\n          </p>\n          <h2>TextField</h2>\n          <p>The <code>TextField</code> wrapper component is a complete form control including a label, input and help text.</p>\n          <Demo index={1} js={TextFieldExample} raw={TextFieldExampleRaw} />\n          <h2>Components</h2>\n          <p>\n            <code>TextField</code> is composed of smaller components (<code>FormControl</code>, <code>InputLabel</code>,\n            <code>Input</code>, and <code>FormHelperText</code>) that you can leverage directly to\n            significantly customize your form inputs.\n          </p>\n          <p>\n            You might also have noticed that some native HTML input properties are missing from the\n            <code>TextField</code> component. This is on purpose. The component takes care of the most used properties,\n            then it's up to the user to use the underlying component shown in the following demo. Still, you can use\n            <code>inputProps</code> (and <code>InputProps</code>, <code>InputLabelProps</code> properties)\n            if you want to avoid some boilerplate.\n          </p>\n          <Demo index={2} js={ComponentsExample} raw={ComponentsExampleRaw} />\n          <h2>Layout</h2>\n          <p>\n            <code>TextField</code>, <code>FormControl</code> allow the specification of margin to alter the\n            vertical spacing of inputs. Using <code>none</code> (default) will not apply margins to the\n            <code>FormControl</code>, whereas <code>dense</code> and <code>normal</code> will as well as\n            alter other styles to meet the specification.\n          </p>\n          <Demo index={3} js={LayoutExample} raw={LayoutExampleRaw} />\n          <h2>Input Adornments</h2>\n          <p>\n            <code>Input</code> allows the provision of <code>InputAdornment</code>. These can be used to add a prefix,\n            a suffix or an action to an input.\n          </p>\n          <Demo index={4} js={AdornmentsExample} raw={AdornmentsExampleRaw} />\n          <h2>Inputs</h2>\n          <Demo index={5} js={InputsExample} raw={InputsExampleRaw} />\n        </Paper>\n      </Grid>\n      <Grid item xs={1} />\n    </Grid>\n  </div>\n);\n\n\nexport default TextField;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  menu: {\n    width: 200\n  }\n});\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '\\$'\n  },\n  {\n    value: 'EUR',\n    label: '€'\n  },\n  {\n    value: 'BTC',\n    label: '฿'\n  },\n  {\n    value: 'JPY',\n    label: '¥'\n  }\n];\n\nclass TextFields extends React.Component {\n  state = {\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR'\n  };\n\n  handleChange = name => (event) => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"uncontrolled\"\n          label=\"Uncontrolled\"\n          defaultValue=\"foo\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          required\n          id=\"required\"\n          label=\"Required\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          error\n          id=\"error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"password\"\n          label=\"Password\"\n          className={classes.textField}\n          variant=\"password\"\n          autoComplete=\"current-password\"\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"multiline-flexible\"\n          label=\"Multiline\"\n          multiline\n          rowsMax=\"4\"\n          value={this.state.multiline}\n          onChange={this.handleChange('multiline')}\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"multiline-static\"\n          label=\"Multiline\"\n          multiline\n          rows=\"4\"\n          defaultValue=\"Default Value\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"helperText\"\n          label=\"Helper text\"\n          defaultValue=\"Default Value\"\n          className={classes.textField}\n          helperText=\"Some important text\"\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"with-placeholder\"\n          label=\"With placeholder\"\n          placeholder=\"Placeholder\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"textarea\"\n          label=\"With placeholder multiline\"\n          placeholder=\"Placeholder\"\n          multiline\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"number\"\n          label=\"Number\"\n          value={this.state.age}\n          onChange={this.handleChange('age')}\n          variant=\"number\"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"search\"\n          label=\"Search field\"\n          variant=\"search\"\n          className={classes.textField}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"select-currency\"\n          select\n          label=\"Select\"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange('currency')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"select-currency-native\"\n          select\n          label=\"Native select\"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange('currency')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id=\"full-width\"\n          label=\"Label\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          placeholder=\"Placeholder\"\n          helperText=\"Full width!\"\n          fullWidth={true}\n          variant=\"outlined\"\n          margin=\"normal\"\n        />\n      </form>\n    );\n  }\n}\n\nTextFields.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(TextFields);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n});\n\nclass ComposedTextField extends React.Component {\n  state = {\n    name: 'Composed TextField'\n  };\n\n  handleChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"name-simple\">Name</InputLabel>\n          <Input id=\"name-simple\" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n        <FormControl className={classes.formControl} aria-describedby=\"name-helper-text\">\n          <InputLabel htmlFor=\"name-helper\">Name</InputLabel>\n          <Input id=\"name-helper\" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText id=\"name-helper-text\">Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\n          <Input id=\"name-disabled\" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error aria-describedby=\"name-error-text\">\n          <InputLabel htmlFor=\"name-error\">Name</InputLabel>\n          <Input id=\"name-error\" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText id=\"name-error-text\">Error</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nComposedTextField.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(ComposedTextField);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n});\n\nconst TextFieldMargins = (props) => {\n  const { classes } = props;\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        label=\"None\"\n        id=\"margin-none\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n      />\n      <TextField\n        label=\"Dense\"\n        id=\"margin-dense\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"dense\"\n      />\n      <TextField\n        label=\"Normal\"\n        id=\"margin-normal\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n      />\n    </div>\n  );\n};\n\nTextFieldMargins.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(TextFieldMargins);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass InputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  handleClickShowPassword = () => {\n    this.setState({ showPassword: !this.state.showPassword });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          label=\"With normal TextField\"\n          id=\"simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n        <TextField\n          select\n          label=\"With Select\"\n          className={classNames(classes.margin, classes.textField)}\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <FormControl fullWidth={true} className={classes.margin}>\n          <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n          <Input\n            id=\"adornment-amount\"\n            value={this.state.amount}\n            onChange={this.handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n        <FormControl\n          className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\n          aria-describedby=\"weight-helper-text\"\n        >\n          <Input\n            id=\"adornment-weight\"\n            value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n            inputProps={{\n              'aria-label': 'Weight',\n            }}\n          />\n          <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n        </FormControl>\n        <FormControl className={classNames(classes.margin, classes.textField)}>\n          <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n          <Input\n            id=\"adornment-password\"\n            type={this.state.showPassword ? 'text' : 'password'}\n            value={this.state.password}\n            onChange={this.handleChange('password')}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                  onMouseDown={this.handleMouseDownPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputAdornments);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  input: {\n    margin: theme.spacing(1)\n  }\n});\n\nfunction Inputs(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue=\"Hello world\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description'\n        }}\n      />\n      <Input\n        placeholder=\"Placeholder\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description'\n        }}\n      />\n      <Input\n        value=\"Disabled\"\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'Description'\n        }}\n      />\n      <Input\n        defaultValue=\"Error\"\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'Description'\n        }}\n      />\n    </div>\n  );\n}\n\nInputs.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(Inputs);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport marked from 'marked';\nimport { withStyles } from '@material-ui/core/styles';\nimport prism from 'prismjs';\n\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-diff';\nimport 'prismjs/components/prism-jsx';\n\nimport 'prismjs/themes/prism.css';\n\nconst renderer = new marked.Renderer();\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  // prism uses the following class prefix.\n  langPrefix: 'language-',\n  highlight(code, lang) {\n    let language;\n    switch (lang) {\n    case 'diff':\n      language = prism.languages.diff;\n      break;\n\n    case 'css':\n      language = prism.languages.css;\n      break;\n\n    case 'js':\n    case 'jsx':\n    default:\n      language = prism.languages.jsx;\n      break;\n    }\n    return prism.highlight(code, language);\n  },\n  renderer\n});\n\n// in case we don't import the prism theme, we can use the following JSS\nconst styles = theme => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 16,\n    color: theme.palette.text.primary,\n    '& .anchor-link': {\n      marginTop: -theme.spacing(10), // Offset for the anchor.\n      position: 'absolute'\n    },\n    '& pre, & pre[class*=\"language-\"]': {\n      margin: `${theme.spacing(3)}px 0`,\n      padding: '12px 18px',\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: 3,\n      overflow: 'auto'\n    },\n    '& code[class*=\"language-\"]': {\n      color: theme.palette.type === 'light' ? theme.palette.text.primary : theme.palette.common.white,\n      textShadow: `0 1px ${theme.palette.type === 'light' ? theme.palette.common.white : theme.palette.common.black}`\n    },\n    '& .token.tag': {\n      color: theme.palette.type === 'light' ? '#905' : '#fb83ae'\n    },\n    '& .token.attr-name': {\n      color: theme.palette.type === 'light' ? '#690' : '#a6e22e'\n    },\n    '& p code, & ul code, & pre code': {\n      fontSize: 14,\n      lineHeight: 1.6\n    },\n    '& h1': {\n      ...theme.typography.display2,\n      color: theme.palette.text.secondary,\n      margin: '0.7em 0'\n    },\n    '& h2': {\n      ...theme.typography.display1,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& h3': {\n      ...theme.typography.headline,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& h4': {\n      ...theme.typography.title,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& p, & ul, & ol': {\n      lineHeight: 1.6\n    },\n    '& h1, & h2, & h3, & h4': {\n      '& code': {\n        fontSize: 'inherit',\n        lineHeight: 'inherit',\n        // Remove scroll on small screens.\n        wordBreak: 'break-word'\n      },\n      '& .anchor-link-style': {\n        opacity: 0,\n        // To prevent the link to get the focus.\n        display: 'none'\n      },\n      '&:hover .anchor-link-style': {\n        display: 'inline-block',\n        opacity: 1,\n        padding: `0 ${theme.spacing(1)}px`,\n        color: theme.palette.text.hint,\n        '&:hover': {\n          color: theme.palette.text.secondary\n        },\n        '& svg': {\n          width: '0.55em',\n          height: '0.55em',\n          fill: 'currentColor'\n        }\n      }\n    },\n    '& table': {\n      width: '100%',\n      display: 'block',\n      overflowX: 'auto',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      overflow: 'hidden',\n      '& .prop-name': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n      },\n      '& .required': {\n        color: theme.palette.type === 'light' ? '#006500' : '#9bc89b',\n      },\n      '& .prop-type': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n        color: theme.palette.type === 'light' ? '#932981' : '#dbb0d0',\n      },\n      '& .prop-default': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n        borderBottom: `1px dotted ${theme.palette.text.hint}`\n      }\n    },\n    '& thead': {\n      fontSize: 14,\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    '& tbody': {\n      fontSize: 14,\n      lineHeight: 1.5,\n      color: theme.palette.text.primary\n    },\n    '& td': {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: `${theme.spacing(1)}px ${theme.spacing(2)}px ${theme.spacing(1)}px ${\n        theme.spacing(1)\n      }px`,\n      textAlign: 'left',\n    },\n    '& td:last-child': {\n      paddingRight: theme.spacing(3)\n    },\n    '& td compact': {\n      paddingRight: theme.spacing(3)\n    },\n    '& td code': {\n      fontSize: 13,\n      lineHeight: 1.6\n    },\n    '& th': {\n      whiteSpace: 'pre',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      fontWeight: theme.typography.fontWeightMedium,\n      padding: `0 ${theme.spacing(2)}px 0 ${theme.spacing(1)}px`,\n      textAlign: 'left'\n    },\n    '& th:last-child': {\n      paddingRight: theme.spacing(3)\n    },\n    '& tr': {\n      height: 48\n    },\n    '& thead tr': {\n      height: 64\n    },\n    '& strong': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& blockquote': {\n      borderLeft: `5px solid ${theme.palette.text.hint}`,\n      backgroundColor: theme.palette.background.paper,\n      padding: `${theme.spacing(1) / 2}px ${theme.spacing(3)}px`,\n      margin: `${theme.spacing(3)}px 0`\n    },\n    '& a, & a code': {\n      // Style taken from the Link component\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    '& img': {\n      maxWidth: '100%'\n    }\n  }\n});\n\nfunction MarkdownElement(props) {\n  const {\n    classes, className, text, ...other\n  } = props;\n\n  /* eslint-disable react/no-danger */\n  return (\n    <div\n      className={classNames(classes.root, 'markdown-body', className)}\n      dangerouslySetInnerHTML={{ __html: marked(text) }}\n      {...other}\n    />\n  );\n  /* eslint-enable */\n}\n\nMarkdownElement.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  className: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles, { flip: false })(MarkdownElement);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport MarkdownElement from './markdown-element.component';\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: 40,\n    marginLeft: -theme.spacing(2),\n    marginRight: -theme.spacing(2),\n    clear: 'both',\n    [theme.breakpoints.up('sm')]: {\n      padding: `0 ${theme.spacing(1)}px`,\n      marginLeft: 0,\n      marginRight: 0\n    }\n  },\n  demo: theme.mixins.gutters({\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900],\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n      paddingTop: theme.spacing(6)\n    }\n  }),\n  header: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n      flip: false,\n      zIndex: 10,\n      position: 'absolute',\n      top: 2,\n      right: theme.spacing(2)\n    }\n  },\n  code: {\n    display: 'none',\n    padding: 0,\n    margin: 0,\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    },\n    '& pre': {\n      overflow: 'auto',\n      margin: '0px !important',\n      borderRadius: '0px !important'\n    }\n  }\n});\n\n\nclass Demo extends React.Component {\n  state = {\n    codeOpen: false\n  };\n\n  codesandboxForm = null;\n\n  handleClickCodeOpen = () => {\n    this.setState({\n      codeOpen: !this.state.codeOpen\n    });\n  };\n\n  render() {\n    const {\n      classes, index, js: DemoComponent, raw\n    } = this.props;\n    const { codeOpen } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.header}>\n\n          <Tooltip\n            id={`demo-source-${index}`}\n            title={codeOpen ? 'Hide the source' : 'Show the source'}\n            placement=\"top\"\n          >\n            <IconButton onClick={this.handleClickCodeOpen} aria-labelledby={`demo-source-${index}`}>\n              <CodeIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <Collapse in={codeOpen} unmountOnExit>\n          <MarkdownElement dir=\"ltr\" className={classes.code} text={`\\`\\`\\`jsx\\n${raw}\\n\\`\\`\\``} />\n        </Collapse>\n        <div className={classes.demo}>\n          <DemoComponent />\n        </div>\n      </div>\n    );\n  }\n}\n\nDemo.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  index: PropTypes.number.isRequired,\n  js: PropTypes.func.isRequired,\n  raw: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(Demo);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"m0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n})), 'VisibilityOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport warning from 'warning';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    process.env.NODE_ENV !== \"production\" ? warning(variantProp !== muiFormControl.variant, 'Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.') : void 0;\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return React.createElement(FormControlContext.Provider, {\n    value: null\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, {\n      filled: classes.filled\n    }[variant], {\n      start: classes.positionStart,\n      end: classes.positionEnd\n    }[position], {\n      dense: classes.marginDense\n    }[muiFormControl.margin]),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);"],"sourceRoot":""}