{"version":3,"sources":["containers/apps/notes/notes-list/notes-list.theme.style.js","containers/apps/notes/notes-list/notes-list.component.js","containers/apps/notes/no-notes/no-notes.theme.style.js","containers/apps/notes/no-notes/no-notes.component.js","containers/apps/notes/note/note.theme.style.js","containers/apps/notes/note/note.component.js","containers/apps/notes/notes.theme.style.js","containers/apps/notes/notes.component.js","containers/apps/notes/notes-list/notes-list.module.scss","containers/apps/notes/no-notes/no-notes.module.scss","containers/apps/notes/note/note.module.scss","containers/apps/notes/notes.module.scss"],"names":["styles","theme","mobileMenuPaper","height","position","width","desktopMenuPaper","maxWidth","zIndex","fullHeight","list","paddingTop","paddingBottom","drawerInner","overflowY","display","flexDirection","flex","background","palette","default","fontSize","color","secondary","main","NotesList","props","classes","selectedNote","onSelect","onDelete","Drawer","variant","open","paper","docked","anchor","ModalProps","keepMounted","className","classNames","List","component","map","note","ListItem","disableGutters","title","date","key","id","container","scss","onClick","ListItemText","primary","text","moment","format","ListItemSecondaryAction","IconButton","aria-label","Divider","defaultProps","compose","withWidth","withStyles","themeStyles","withTheme","light","Typography","contrastText","Note","handleChange","event","value","target","state","updateTimeout","clearTimeout","update","setTimeout","onSave","setState","internalText","nextProps","this","onCancel","placeholder","onChange","Hidden","mdUp","Button","React","Component","root","marginTop","overflow","appFrame","content","padding","flexGrow","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","boxSizing","breakpoints","up","marginLeft","marginRight","contentShift","easeOut","enteringScreen","Notes","snackbarOpen","snackbarMessage","onSnackbarClose","selectNote","deleteNote","index","notes","findIndex","findNote","splice","unselectNote","saveSelectedNote","savedNote","Object","assign","Date","getTime","unshift","addNewNote","newNote","Math","floor","random","toString","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","addNoteButton","isWidthUp","onMessageDelete","deleteMessage","module","exports"],"mappings":"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","file":"static/js/23.7c7defc5.chunk.js","sourcesContent":["const desktopMenuWidth = 300;\n\nconst styles = theme => ({\n  mobileMenuPaper: {\n    height: '100%',\n    position: 'absolute',\n    width: '100%'\n  },\n  desktopMenuPaper: {\n    position: 'relative',\n    height: '100%',\n    width: desktopMenuWidth,\n    maxWidth: desktopMenuWidth,\n    zIndex: 'auto'\n  },\n  fullHeight: {\n    height: '100%'\n  },\n  list: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  drawerInner: {\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1 1 100%'\n  },\n  // Email List container\n  'portal-thread-list__item--active': {\n    background: theme.palette.background.default\n  },\n  'portal-thread-list__item__icon': {\n    fontSize: 16,\n    color: theme.palette.secondary.main\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport classNames from 'classnames';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport withWidth from '@material-ui/core/withWidth';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport moment from 'moment';\n\nimport themeStyles from './notes-list.theme.style';\nimport scss from './notes-list.module.scss';\n\nconst NotesList = (props) => {\n  const {\n    classes,\n    selectedNote,\n    list,\n    width,\n    onSelect,\n    onDelete\n  } = props;\n\n  return (\n    <Drawer\n      variant=\"persistent\"\n      open={(width !== 'sm' && width !== 'xs') || selectedNote === null}\n      classes={{\n        paper: width === 'sm' || width === 'xs' ? classes.mobileMenuPaper : classes.desktopMenuPaper,\n        docked: classes.fullHeight\n      }}\n      anchor=\"left\"\n      ModalProps={{\n        keepMounted: true\n      }}\n    >\n      <div className={classNames(classes.drawerInner, 'portal-hide-scrollbars')}>\n        <List component=\"nav\" className={classes.list}>\n          {list.map(note => ([\n            <ListItem\n              disableGutters\n              title={note.date}\n              key={`${note.id}a`}\n              classes={{\n                container: classNames(\n                  scss['portal-thread-list__item'],\n                  note === selectedNote ? classes['portal-thread-list__item--active'] : ''\n                )\n              }}\n              onClick={onSelect(note)}\n            >\n              <ListItemText\n                primary={note.text}\n                secondary={moment(note.date).format('MMMM Do YYYY, h:mm:ss a')}\n                classes={{\n                  primary: scss['portal-thread-list__item__text'],\n                  secondary: scss['portal-thread-list__item__text']\n                }}\n              />\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"Delete Note\" onClick={onDelete(note)}>\n                  <DeleteIcon className={classes['portal-thread-list__item__icon']} />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>,\n            <Divider key={`${note.id}b`} />\n          ]))}\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nNotesList.defaultProps = {\n  selectedNote: null\n};\n\nNotesList.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  selectedNote: PropTypes.shape({}),\n  list: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  width: PropTypes.string.isRequired\n};\n\nexport default compose(withWidth(), withStyles(themeStyles, { withTheme: true }))(NotesList);\n","const styles = theme => ({\n  'portal-notes-no-note__container': {\n    background: theme.palette.secondary.light\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport classNames from 'classnames';\n\nimport themeStyles from './no-notes.theme.style';\nimport scss from './no-notes.module.scss';\n\nconst NoNotes = (props) => {\n  const { classes } = props;\n\n  return (\n    <div className={classNames(scss['portal-notes-no-notes'], classes['portal-notes-no-notes'])}>\n      <div className={classNames(\n        scss['portal-notes-no-note__container'],\n        classes['portal-notes-no-note__container']\n      )}\n      >\n        <div className={scss['portal-notes-no-note__paper']} />\n      </div>\n      <Typography component=\"h2\">No Note Selected</Typography>\n    </div>\n  );\n};\n\n\nNoNotes.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(themeStyles, { withTheme: true })(NoNotes);\n","const styles = theme => ({\n  'portal-note-cancel-fab__icon': {\n    color: theme.palette.secondary.contrastText\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ListIcon from '@material-ui/icons/List';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport classNames from 'classnames';\n\nimport themeStyles from './note.theme.style';\nimport scss from './note.module.scss';\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      internalText: props.note.text,\n      updateTimeout: null\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.note.id !== this.props.note.id) {\n      this.setState({\n        internalText: nextProps.note.text,\n        updateTimeout: null\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n    if (this.state.updateTimeout) {\n      clearTimeout(this.state.updateTimeout);\n    }\n\n    const update = setTimeout(() => {\n      this.props.onSave({\n        id: this.props.note.id,\n        text: value\n      });\n    }, 3000);\n\n    this.setState({\n      internalText: value,\n      updateTimeout: update\n    });\n  };\n\n  render() {\n    const { classes, onCancel } = this.props;\n    return (\n      <div className={classNames(scss['portal-note-container'], classes['portal-note-container'])}>\n        <div className={scss['portal-note']}>\n          <textarea\n            value={this.state.internalText}\n            placeholder=\"Type a note here\"\n            onChange={this.handleChange}\n            className={scss['portal-note-text']}\n          />\n        </div>\n        <Hidden mdUp>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            aria-label=\"compose\"\n            className={scss['portal-note-cancel-fab']}\n            onClick={() => onCancel()}\n          >\n            <ListIcon className={classes['portal-note-cancel-fab__icon']} />\n          </Button>\n        </Hidden>\n      </div>\n    );\n  }\n}\n\nNote.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  note: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};\n\nexport default withStyles(themeStyles, { withTheme: true })(Note);\n","const menuWidth = 300;\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    marginTop: 0,\n    zIndex: 1,\n    overflow: 'hidden'\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n  content: {\n    width: '100%',\n    padding: 0,\n    flexGrow: 1,\n    position: 'relative',\n    backgroundColor: theme.palette.background.default,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    height: '100%',\n    overflowY: 'auto',\n    boxSizing: 'border-box'\n  },\n  'content-left': {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: -menuWidth\n    }\n  },\n  'content-right': {\n    [theme.breakpoints.up('md')]: {\n      marginRight: -menuWidth\n    }\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  'contentShift-left': {\n    marginLeft: 0\n  },\n  'contentShift-right': {\n    marginRight: 0\n  },\n  // Fab button icon\n  'portal-notes-compose-fab__icon': {\n    color: theme.palette.secondary.contrastText\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport classNames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport NotesList from './notes-list/notes-list.component';\nimport NoNotes from './no-notes/no-notes.component';\nimport Note from './note/note.component';\n\nimport themeStyles from './notes.theme.style';\nimport scss from './notes.module.scss';\n\nimport notes from '../../../assets/data/apps/notes/notes.json';\n\nclass Notes extends React.Component {\n  state = {\n    selectedNote: null,\n    snackbarOpen: false,\n    snackbarMessage: ''\n  };\n\n  onSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  }\n\n  selectNote = note => () => {\n    this.setState({ selectedNote: note });\n  }\n\n  deleteNote = note => () => {\n    this.setState({ selectedNote: null });\n    const index = notes.findIndex(findNote => findNote.id === note.id);\n    if (index !== -1) {\n      notes.splice(index, 1);\n    }\n  }\n\n  unselectNote = () => {\n    this.setState({ selectedNote: null });\n  }\n\n  saveSelectedNote = (note) => {\n    const savedNote = Object.assign({}, note);\n    const index = notes.findIndex(findNote => findNote.id === savedNote.id);\n    savedNote.date = new Date().getTime();\n\n    if (index === -1) {\n      notes.unshift(savedNote);\n    } else {\n      notes[index] = savedNote;\n    }\n\n    this.setState({\n      selectedNote: savedNote,\n      snackbarOpen: true,\n      snackbarMessage: 'Note Saved'\n    });\n  }\n\n  addNewNote = () => {\n    const newNote = {\n      id: Math.floor((Math.random() * 1000)).toString(),\n      date: new Date().getTime(),\n      text: ''\n    };\n    this.setState({ selectedNote: newNote });\n  }\n\n  render() {\n    const { classes, width } = this.props;\n    const anchor = 'left';\n\n    const snackbar = (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={this.state.snackbarOpen}\n        autoHideDuration={3000}\n        onClose={this.onSnackbarClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{this.state.snackbarMessage}</span>}\n      />\n    );\n\n    const addNoteButton = (\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        aria-label=\"compose\"\n        className={scss['portal-notes-compose-fab']}\n        onClick={() => this.addNewNote()}\n      >\n        <NoteAddIcon className={classes['portal-notes-compose-fab__icon']} />\n      </Button>\n    );\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          <NotesList\n            selectedNote={this.state.selectedNote}\n            list={notes}\n            onSelect={this.selectNote}\n            onDelete={this.deleteNote}\n          />\n          <main\n            className={classNames(classes.content, classes[`content-${anchor}`], 'portal-hide-scrollbars', {\n              [classes.contentShift]: (isWidthUp('md', width)),\n              [classes[`contentShift-${anchor}`]]: isWidthUp('md', width)\n            })}\n          >\n            {this.state.selectedNote ?\n              <Note\n                note={this.state.selectedNote}\n                onMessageDelete={this.deleteMessage}\n                onSave={this.saveSelectedNote}\n                onCancel={this.unselectNote}\n              /> : <NoNotes />\n            }\n            {addNoteButton}\n          </main>\n          {snackbar}\n        </div>\n      </div>\n    );\n  }\n}\n\nNotes.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  width: PropTypes.string.isRequired\n};\n\nexport default compose(withWidth(), withStyles(themeStyles, { withTheme: true }))(Notes);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portal-thread-list__item\":\"notes-list_portal-thread-list__item__2Zi7e\",\"portal-thread-list__item__text\":\"notes-list_portal-thread-list__item__text__P-JR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portal-notes-no-notes\":\"no-notes_portal-notes-no-notes__3u9kI\",\"portal-notes-no-note__container\":\"no-notes_portal-notes-no-note__container__3EAUI\",\"portal-notes-no-note__paper\":\"no-notes_portal-notes-no-note__paper__O2RuC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portal-note-container\":\"note_portal-note-container__1s1_Y\",\"portal-note\":\"note_portal-note__jRnt2\",\"portal-note-text\":\"note_portal-note-text__1jfws\",\"portal-note-cancel-fab\":\"note_portal-note-cancel-fab__2tRi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portal-notes-compose-fab\":\"notes_portal-notes-compose-fab__2xr5G\"};"],"sourceRoot":""}