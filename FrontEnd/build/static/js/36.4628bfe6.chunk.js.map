{"version":3,"sources":["containers/apps/calendar/full-calendar/full-calendar.module.scss","containers/apps/calendar/calendar.module.scss","containers/apps/calendar/event-dialog/event-dialog.component.js","containers/apps/calendar/full-calendar/full-calendar.theme.style.js","containers/apps/calendar/full-calendar/full-calendar.component.js","containers/apps/calendar/calendar.theme.style.js","containers/apps/calendar/calendar.component.js"],"names":["module","exports","EventDialog","state","title","location","description","start","end","id","handleCancel","props","onClose","handleSend","handleFormFieldChange","prop","value","setState","handleEntering","event","format","moment","Dialog","open","this","onEntering","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","type","onChange","e","target","fullWidth","variant","InputLabelProps","shrink","DialogActions","Button","onClick","color","React","Component","defaultProps","styles","theme","calendar","palette","primary","main","background","secondary","contrastText","padding","outline","borderRadius","overflow","boxShadow","borderColor","light","divider","height","verticalAlign","Calendar","calendarNavigate","direction","instance","fullCalendar","changeView","view","selectedView","jQuery","$","noConflict","date","Date","viewOptions","iconName","viewName","name","viewFormats","month","agendaWeek","agendaDay","calendarOptions","header","navLinks","editable","fixedWeekCount","eventLimit","viewRender","currentDay","getDate","currentMonthNum","eventClick","calEvent","onEventClick","eventDrop","onEventMove","settings","events","setTimeout","root","nextProps","classes","getTime","Grid","container","spacing","className","classNames","scss","item","alignItems","xs","IconButton","component","justify","map","option","key","withStyles","themeStyles","withTheme","width","onSnackbarClose","snackbarOpen","openEventDialog","newState","eventDialogTitle","eventDialogOpen","refreshEvents","filter","addEvent","result","newEvent","newEvents","length","push","snackbarMessage","randomDate","startNumber","toDate","endNumber","randomTime","Math","random","createRandomEvents","number","startDate","endDate","eventNames","locationNames","x","randomMonthDate","anHourLater","add","randomEvent","floor","randomLocation","startOf","endOf","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","addNoteButton","aria-label","compose","withWidth"],"mappings":"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","file":"static/js/36.4628bfe6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"portal-calendar-page\":\"full-calendar_portal-calendar-page__yHCEU\",\"portal-calendar-page__column\":\"full-calendar_portal-calendar-page__column__1VNCa\",\"portal-calendar-page__calendar\":\"full-calendar_portal-calendar-page__calendar__2Zjjb\",\"portal-calendar-page__background\":\"full-calendar_portal-calendar-page__background__1QJwi\",\"portal-calendar-page__background-month-0\":\"full-calendar_portal-calendar-page__background-month-0__Ji9SW\",\"portal-calendar-page__background-month-1\":\"full-calendar_portal-calendar-page__background-month-1__kQfDm\",\"portal-calendar-page__background-month-2\":\"full-calendar_portal-calendar-page__background-month-2__1m6VT\",\"portal-calendar-page__background-month-3\":\"full-calendar_portal-calendar-page__background-month-3__1IB5M\",\"portal-calendar-page__background-month-4\":\"full-calendar_portal-calendar-page__background-month-4__31MJ-\",\"portal-calendar-page__background-month-5\":\"full-calendar_portal-calendar-page__background-month-5__1aChH\",\"portal-calendar-page__background-month-6\":\"full-calendar_portal-calendar-page__background-month-6__2XbBZ\",\"portal-calendar-page__background-month-7\":\"full-calendar_portal-calendar-page__background-month-7__r8X_G\",\"portal-calendar-page__background-month-8\":\"full-calendar_portal-calendar-page__background-month-8__1iXwC\",\"portal-calendar-page__background-month-9\":\"full-calendar_portal-calendar-page__background-month-9__37U0Q\",\"portal-calendar-page__background-month-10\":\"full-calendar_portal-calendar-page__background-month-10__1uCYH\",\"portal-calendar-page__background-month-11\":\"full-calendar_portal-calendar-page__background-month-11__mpe-A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portal-calendar-event-fab\":\"calendar_portal-calendar-event-fab__f5m0N\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport moment from 'moment';\n\nclass EventDialog extends React.Component {\n  state = {\n    title: '',\n    location: '',\n    description: '',\n    start: '',\n    end: '',\n    id: ''\n  };\n\n  handleCancel = () => {\n    this.props.onClose(null);\n  };\n\n  handleSend = () => {\n    this.props.onClose(this.state);\n  };\n\n  handleFormFieldChange = (prop, value) => {\n    this.setState({ [prop]: value });\n  }\n\n  handleEntering = () => {\n    this.setState({\n      title: (this.props.event && this.props.event.title) || '',\n      location: (this.props.event && this.props.event.location) || '',\n      description: (this.props.event && this.props.event.description) || '',\n      start: (this.props.event && this.props.event.start.format('YYYY-MM-DD')) || moment().format('YYYY-MM-DD'),\n      end: (this.props.event && this.props.event.end.format('YYYY-MM-DD')) || moment().format('YYYY-MM-DD'),\n      id: (this.props.event && this.props.event.id) || null\n    });\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.handleCancel}\n        onEntering={this.handleEntering}\n        aria-labelledby=\"event-dialog\"\n      >\n        <DialogTitle id=\"event-dialog\">{this.props.title}</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Event title\"\n            type=\"text\"\n            value={this.state.title}\n            onChange={e => this.handleFormFieldChange('title', e.target.value)}\n            fullWidth={true}\n            variant=\"outlined\"\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"location\"\n            label=\"Event location\"\n            type=\"text\"\n            value={this.state.location}\n            onChange={e => this.handleFormFieldChange('location', e.target.value)}\n            fullWidth={true}\n            variant=\"outlined\"\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Event description\"\n            type=\"text\"\n            value={this.state.description}\n            onChange={e => this.handleFormFieldChange('description', e.target.value)}\n            fullWidth={true}\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"start\"\n            label=\"Start date\"\n            type=\"date\"\n            value={this.state.start}\n            onChange={e => this.handleFormFieldChange('start', e.target.value)}\n            InputLabelProps={{\n              shrink: true\n            }}\n          />\n          <TextField\n            id=\"start\"\n            label=\"End date\"\n            type=\"date\"\n            value={this.state.end}\n            onChange={e => this.handleFormFieldChange('end', e.target.value)}\n            InputLabelProps={{\n              shrink: true\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleSend} color=\"primary\" autoFocus>\n            Send\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nEventDialog.defaultProps = {\n  event: null\n};\n\nEventDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  event: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    start: PropTypes.shape({\n      format: PropTypes.func.isRequired\n    }).isRequired,\n    end: PropTypes.shape({\n      format: PropTypes.func.isRequired\n    }).isRequired,\n    id: PropTypes.number.isRequired\n  }),\n  onClose: PropTypes.func.isRequired\n};\n\nexport default EventDialog;\n","const styles = theme => ({\n  calendar: {\n    '& .fc-content': {\n      'border-color': theme.palette.primary.main\n    },\n    '& .fc-event': {\n      background: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText,\n      padding: '10px',\n      'border-color': theme.palette.secondary.main\n    },\n    '& .fc-view': {\n      '&:focus': {\n        outline: 'none'\n      },\n      '& > table': {\n        background: 'rgba(255, 255, 255, .75)',\n        borderRadius: 4,\n        overflow: 'hidden',\n        boxShadow: '0px 20px 30px rgba(0,0,0,0.2)',\n        borderColor: 'transparent',\n        '& > thead': {\n          background: theme.palette.primary.light,\n          color: theme.palette.primary.contrastText\n        },\n        '&:focus': {\n          outline: 'none'\n        },\n        '& th, & td, & hr, & thead, & tbody, & .fc-row, & .fc-popover': {\n          borderColor: theme.palette.divider\n        },\n        '& .fc-content-skeleton': {\n          '& th, & td, & hr, & thead, & tbody, & .fc-row, & .fc-popover': {\n            borderColor: 'transparent'\n          }\n        }\n      },\n      '& .fc-day-header': {\n        height: 48,\n        verticalAlign: 'middle'\n      },\n      '& .fc-day-number': {\n        padding: 8\n      },\n      '& .fc-today': {\n        background: 'rgba(0, 0, 0, .04) !important'\n      },\n      '& .fc-content-skeleton .fc-today': {\n        background: 'none'\n      }\n    }\n  },\n  'portal-calendar-page__view-active': {\n    color: theme.palette.secondary.light\n  },\n  'portal-calendar-page__view-indicator': {\n    color: theme.palette.secondary.light\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ViewWeekIcon from '@material-ui/icons/ViewWeek';\nimport ViewDayIcon from '@material-ui/icons/ViewDay';\n\nimport moment from 'moment';\nimport $ from 'jquery';\nimport 'fullcalendar/dist/fullcalendar.css';\nimport 'fullcalendar/dist/fullcalendar.min';\n\nimport themeStyles from './full-calendar.theme.style';\nimport scss from './full-calendar.module.scss';\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.jQuery = $.noConflict();\n    this.date = new Date();\n\n    this.viewOptions = [{\n      iconName: <ViewModuleIcon />,\n      viewName: 'month',\n      name: 'Month View'\n    }, {\n      iconName: <ViewWeekIcon />,\n      viewName: 'agendaWeek',\n      name: 'Week View'\n    }, {\n      iconName: <ViewDayIcon />,\n      viewName: 'agendaDay',\n      name: 'Day View'\n    }];\n\n    this.viewFormats = {\n      month: 'MMMM YYYY',\n      agendaWeek: 'w - YYYY',\n      agendaDay: 'dddd MMMM YYYY'\n    };\n\n    this.calendarOptions = {\n      header: false,\n      height: 'parent',\n      navLinks: true,\n      editable: true,\n      fixedWeekCount: false,\n      eventLimit: true,\n      viewRender: (view) => {\n        this.setState({\n          currentDay: view.calendar.getDate().format(),\n          currentMonthNum: view.calendar.getDate().month()\n        });\n      },\n      eventClick: (calEvent) => {\n        props.onEventClick(calEvent);\n      },\n      eventDrop: (calEvent) => {\n        props.onEventMove(calEvent);\n      }\n    };\n\n    this.state = {\n      currentDay: null,\n      currentMonthNum: null,\n      selectedView: this.viewOptions[0].viewName\n    };\n  }\n\n  componentDidMount() {\n    const settings = { events: this.props.events, ...this.calendarOptions };\n    setTimeout(() => {\n      this.instance = this.jQuery(`#${this.root}`).fullCalendar(settings);\n    }, 400);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.instance.fullCalendar('removeEventSources');\n    this.instance.fullCalendar('addEventSource', nextProps.events);\n  }\n\n  calendarNavigate = direction => () => {\n    this.instance.fullCalendar(direction);\n  };\n\n  changeView = view => () => {\n    this.setState({ selectedView: view });\n    this.instance.fullCalendar('changeView', view);\n  }\n\n  render() {\n    const { classes } = this.props;\n    this.root = `ID${this.date.getTime()}`;\n\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        spacing={0}\n        className={classNames(\n          scss['portal-calendar-page'],\n          scss['portal-calendar-page__background'],\n          scss[`portal-calendar-page__background-month-${this.state.currentMonthNum}`]\n        )}\n      >\n        <Grid item>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item xs={6} className={scss['portal-calendar-page__column']}>\n              <IconButton onClick={this.calendarNavigate('prev')} aria-labelledby=\"Previous\">\n                <ChevronLeftIcon />\n              </IconButton>\n              <Typography component=\"h1\" variant=\"h1\">\n                {this.state.selectedView === 'agendaWeek' && 'Week '}\n                {moment(this.state.currentDay).format(this.viewFormats[this.state.selectedView])}\n              </Typography>\n              <IconButton onClick={this.calendarNavigate('next')} aria-labelledby=\"Next\">\n                <ChevronRightIcon />\n              </IconButton>\n            </Grid>\n            <Grid item container xs={6} className={scss['portal-calendar-page__column']} justify=\"flex-end\">\n              {this.viewOptions.map(option => (\n                <IconButton\n                  key={option.viewName}\n                  onClick={this.changeView(option.viewName)}\n                  className={option.viewName === this.state.selectedView ? classes['portal-calendar-page__view-active'] : ''}\n                >\n                  {option.iconName}\n                </IconButton>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} className={scss['portal-calendar-page__calendar']}>\n          <div id={this.root} className={classNames(classes.calendar, 'fc fc-unthemed fc-ltr')} />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nCalendar.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  events: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onEventClick: PropTypes.func.isRequired,\n  onEventMove: PropTypes.func.isRequired\n};\n\nexport default withStyles(themeStyles, { withTheme: true })(Calendar);\n","const styles = theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden'\n  },\n  // Fab button icon\n  'portal-calendar-event-fab__icon': {\n    color: theme.palette.secondary.contrastText\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport moment from 'moment';\n\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport AddIcon from '@material-ui/icons/Add';\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\n\nimport EventDialog from './event-dialog/event-dialog.component';\nimport FullCalendar from './full-calendar/full-calendar.component';\n\nimport themeStyles from './calendar.theme.style';\nimport scss from './calendar.module.scss';\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: this.createRandomEvents(100, moment().startOf('year'), moment().endOf('year')),\n      snackbarOpen: false,\n      snackbarMessage: '',\n      eventDialogOpen: false,\n      eventDialogTitle: '',\n      event: null\n    };\n  }\n\n  onSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  }\n\n  openEventDialog = (event) => {\n    const type = event ? 'Edit Event' : 'Add Event';\n    const newState = {\n      event,\n      eventDialogTitle: type,\n      eventDialogOpen: true\n    };\n    this.setState(newState);\n  }\n\n  refreshEvents = (event) => {\n    this.setState({ events: [...this.state.events.filter(e => e.id !== event.id), event] });\n  }\n\n  addEvent = (result) => {\n    const newEvent = result;\n    this.setState({\n      eventDialogOpen: false\n    });\n\n    if (!newEvent) {\n      return;\n    }\n\n    const newEvents = this.state.eventDialogTitle === 'Edit Event' ?\n      this.state.events.filter(e => e.id !== newEvent.id) :\n      this.state.events;\n\n    newEvent.id = !newEvent.id ? newEvents.length : newEvent.id;\n    newEvents.push(newEvent);\n    this.setState({ events: newEvents });\n\n\n    this.setState({\n      snackbarOpen: true,\n      snackbarMessage: 'Event Saved'\n    });\n  }\n\n  randomDate = (start, end) => {\n    const startNumber = start.toDate().getTime();\n    const endNumber = end.toDate().getTime();\n    const randomTime = (Math.random() * (endNumber - startNumber)) + startNumber;\n    return moment(randomTime);\n  }\n\n  createRandomEvents = (number, startDate, endDate) => {\n    const events = [];\n    const eventNames = [\n      'Pick up the kids', 'Remember the milk', 'Meeting with Morris', 'Car service',  'Go Surfing',\n      'Party at Christos house', 'Beer Oclock', 'Festival tickets', 'Laundry!', 'Haircut appointment',\n      'Walk the dog', 'Dentist :(', 'Board meeting', 'Go fishing'];\n    const locationNames = ['London', 'New York', 'Paris', 'Athens'];\n    for (let x = 0; x < number; x += 1) {\n      const randomMonthDate = this.randomDate(startDate, endDate);\n      const anHourLater = moment(randomMonthDate).add(1, 'h');\n      const randomEvent = Math.floor(Math.random() * (eventNames.length - 0));\n      const randomLocation = Math.floor(Math.random() * (locationNames.length - 0));\n\n      events.push({\n        id: x,\n        title: eventNames[randomEvent],\n        start: randomMonthDate.toDate(),\n        end: anHourLater.toDate(),\n        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Veritatis, fugiat!',\n        location: locationNames[randomLocation]\n      });\n    }\n    return events;\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const snackbar = (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={this.state.snackbarOpen}\n        autoHideDuration={3000}\n        onClose={this.onSnackbarClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{this.state.snackbarMessage}</span>}\n      />\n    );\n\n    const addNoteButton = (\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        aria-label=\"compose\"\n        className={scss['portal-calendar-event-fab']}\n        onClick={() => this.openEventDialog()}\n      >\n        <AddIcon className={classes['portal-calendar-event-fab__icon']} />\n      </Button>\n    );\n\n    return (\n      <div className={classes.root}>\n        <FullCalendar\n          events={this.state.events}\n          onEventClick={this.openEventDialog}\n          onEventMove={this.refreshEvents}\n        />\n        <EventDialog\n          open={this.state.eventDialogOpen}\n          title={this.state.eventDialogTitle}\n          event={this.state.event}\n          onClose={this.addEvent}\n        />\n        {addNoteButton}\n        {snackbar}\n      </div>\n    );\n  }\n}\n\nCalendar.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default compose(withWidth(), withStyles(themeStyles, { withTheme: true }))(Calendar);\n"],"sourceRoot":""}