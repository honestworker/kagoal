{"version":3,"sources":["containers/authentication/register/register.theme.style.js","containers/authentication/register/components/register.email.component.js","containers/authentication/register/components/register.info.component.js","containers/authentication/register/components/register.question.component.js","containers/authentication/register/components/register.team.component.js","containers/authentication/register/register.component.js","containers/authentication/register/register.module.scss","validation/is-email.js","validation/password-strength.js"],"names":["styles","theme","background","palette","primary","main","width","height","light","RegisterEmail","state","email","errors","submit_flag","reg_info","reg_errors","UNSAFE_componentWillMount","email_info","email_error","props","Object","keys","length","setState","prop","panelDirection","this","classes","checkValidate","check_errors","isEmpty","isEmail","Grid","item","sm","xs","className","scss","direction","container","spacing","Card","CardContent","justify","alignItems","Typography","variant","component","gutterBottom","TextField","label","fullWidth","margin","name","value","onChange","event","data","target","setTimeout","Button","onClick","onClickNext","color","size","CardActions","Link","href","link","React","Component","RegisterInfo","full_name","password","team_name","checked","showPassword","strength","pssswordStrength","handleChange","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onMouseDown","preventDefault","FormControlLabel","control","Checkbox","state_errors","checkNoError","RegisterQuestion","usage","describe","collaborate","manage","team","flag","submit","loading","css","process","questions","id","console","log","FormControl","formControl","Select","native","input","OutlinedInput","disabled","map","index","key","CircularProgress","RegisterTeam","email1","email2","email3","checked1","checked2","checked3","onClickSkip","button","team_data","admin","Register","activeStep","user","setStep","step","nextStep","nextProps","res_type","steps","handleEmailStore","handleInfoStore","handleQuestionStore","registerUser","handleInitTeam","inviteMember","members","history","handleGotoDashboard","gotoDashboard","level","compose","withWidth","withStyles","themeStyles","withTheme","connect","req_info","module","exports","test","String","toLowerCase","undefined","trim"],"mappings":"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","file":"static/js/38.49908a81.chunk.js","sourcesContent":["const styles = theme => ({\n  background: {\n    background: theme.palette.primary.main,\n    width: '100%',\n    height: '100%',\n  },\n  'primary-card': {\n    background: theme.palette.primary.light,\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\n\nimport isEmpty from '../../../../validation/is-empty';\nimport isEmail from '../../../../validation/is-email';\n\nimport scss from '../register.module.scss';\n\nclass RegisterEmail extends React.Component {\n  state = {\n    email: '',\n    errors: {\n      email: ''\n    },\n    submit_flag: false,\n    reg_info: {},\n    reg_errors: {}\n  }\n\n  UNSAFE_componentWillMount = () => {\n    let email_info = '';\n    let email_error = '';\n    let submit_flag = false;\n    if (this.props.reg_info) {\n      if (!!Object.keys(this.props.reg_info).length) {\n        email_info = this.props.reg_info.email;\n      }\n    }\n    if (this.props.reg_errors) {\n      if (!!Object.keys(this.props.reg_errors).length) {\n        email_error = this.props.reg_errors.email;\n        submit_flag = true;\n      }\n    }\n    this.setState({\n      email: email_info,\n      errors: { email: email_error },\n      submit_flag: submit_flag\n    });\n  };\n\n  render() {\n    const panelDirection = this.props.width === 'xs' ? 'column' : 'row';\n    const { email, errors, submit_flag } = this.state;\n    const { classes } = this.props;\n\n    const checkValidate = () => {\n      const check_errors = {\n        email: ''\n      };\n      if (isEmpty(this.state.email)) {\n        check_errors.email = 'Please insert the value';\n      } else {\n        if (!isEmail(this.state.email)) {\n          check_errors.email = 'Please insert the valid email';\n        }\n      }\n      this.setState({\n        errors: check_errors\n      });\n      if (!check_errors.email) {\n        return true;\n      }\n      return false;\n    }\n\n    const handleChange = prop => event => {\n      const data = event.target.value;\n      this.setState({\n        [prop]: data\n      });\n      if (submit_flag) {\n        setTimeout(()=>checkValidate(), 300);\n      }\n    };\n  \n    const handleSubmit = (event) => {\n      this.setState({\n        submit_flag: true\n      });\n      if (checkValidate()) {\n        this.props.onClickNext(this.state.email);\n      }\n    };\n\n    return (\n      <Grid item sm={3} xs={12} className={scss['panel']}>\n        <Grid direction={panelDirection} container spacing={0}>\n          <Grid\n            item\n            sm={12}\n            xs={12}\n          >\n            <Card className={scss['card']}>\n              <CardContent className={scss['card-content']}>\n                <Grid\n                  container \n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={0}>\n                  <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n                    New Account\n                  </Typography>\n                  <Typography component=\"p\" gutterBottom>\n                    Sign up with your work email address\n                  </Typography>\n                </Grid>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <TextField\n                      label=\"Email Address\"\n                      fullWidth={true}\n                      margin=\"normal\"\n                      name=\"email\"\n                      value={email}\n                      onChange={handleChange('email')}\n                      className={((errors.email) ? scss['is-invalid'] : '')}\n                      variant=\"outlined\"\n                    />\n                    {errors.email && <div className={scss['invalid-feedback']}>{errors.email}</div>}\n                  </Grid>\n                </Grid>\n                <Grid\n                  container \n                  justify=\"center\"\n                  alignItems=\"center\">\n                    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\" size=\"large\" className={scss['submit_btn']}>Sign Up</Button>\n                </Grid>\n              </CardContent>\n              <CardActions className={scss['card-actions']}>\n                <Grid \n                  container \n                  justify=\"center\"\n                  alignItems=\"center\">\n                  <Typography variant=\"subtitle1\">If you already Signed Up</Typography>\n                  <Link href=\"/login\" className={classes.link}>\n                  &nbsp;&nbsp;Log-in Here\n                  </Link>\n                </Grid>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n};\n\nRegisterEmail.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  width: PropTypes.string.isRequired,\n  onClickNext: PropTypes.func.isRequired,\n  reg_info: PropTypes.object.isRequired,\n  reg_errors: PropTypes.object.isRequired,\n};\n\nexport default RegisterEmail;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\n\nimport isEmpty from '../../../../validation/is-empty';\nimport pssswordStrength from '../../../../validation/password-strength';\n\nimport scss from '../register.module.scss';\n\nclass RegisterInfo extends React.Component {\n  state = {\n    full_name: '',\n    password: '',\n    team_name: '',\n    checked: false,\n    showPassword: false,\n    errors: {\n      full_name: '',\n      password: '',\n      team_name: '',\n      checked: '',\n    },\n    submit_flag: false,\n    reg_info: {},\n    reg_errors: {}\n  }\n\n  UNSAFE_componentWillMount = () => {\n    if (this.props.reg_info) {\n      if (!!Object.keys(this.props.reg_info).length) {\n        this.setState({\n          full_name: this.props.reg_info.full_name,\n          password: this.props.reg_info.password,\n          team_name: this.props.reg_info.team_name,\n        });\n      }\n    }\n    if (this.props.reg_errors) {\n      if (!!Object.keys(this.props.reg_errors).length) {\n        this.setState({\n          checked: true\n        });\n      }\n    }\n  };\n\n  render() {\n    // Flip container to column on mobile screens.\n    const panelDirection = this.props.width === 'xs' ? 'column' : 'row';\n    const { full_name, password, team_name, checked, showPassword, errors, submit_flag } = this.state;\n\n    const checkNoError = () => {\n      const state_errors = this.state.errors;\n      if (!state_errors.full_name && !state_errors.password && !state_errors.team_name && !state_errors.checked) {\n        return true;\n      }\n      return false;\n    }\n\n    const checkValidate = () => {\n      const errors = {\n        full_name: '',\n        password: '',\n        team_name: '',\n        checked: '',\n      };\n      if (isEmpty(this.state.full_name)) {\n        errors.full_name = 'Please insert the value';\n      }\n      if (isEmpty(this.state.password)) {\n        errors.password = 'Please insert the value';\n      } else {\n        const strength = pssswordStrength(this.state.password);\n        if (strength === 'no_input') {\n          errors.password = 'Please insert the value';\n        } else if (strength === 'weak') {\n          errors.password = 'Password needs to be longer than 8 letters';\n        }\n      }\n      if (isEmpty(this.state.team_name)) {\n        errors.team_name = 'Please insert the value';\n      }\n      if (!this.state.checked) {\n        errors.checked = 'Please check the value';\n      }\n      this.setState({\n        errors: errors\n      });\n    }\n\n    const handleChange = prop => event => {\n      if (prop === 'checked') {\n        this.setState({\n          checked: !checked\n        });\n      } else {\n        this.setState({\n          [prop]: event.target.value\n        });\n      }\n      if (submit_flag) {\n        setTimeout(()=> checkValidate(), 300);\n      }\n    }\n\n    const handleClickShowPassword = () => {\n      this.setState({\n        showPassword: !showPassword\n      });\n    };\n  \n    const handleSubmit = (event) => {\n      const data = {\n        full_name: this.state.full_name,\n        password: this.state.password,\n        team_name: this.state.team_name,\n      }\n      this.setState({\n        submit_flag: true\n      });\n      checkValidate();\n      setTimeout(()=> {\n        if (checkNoError()) {\n          this.props.onClickNext(data);\n        }\n      }, 300);\n    };\n  \n    const handleMouseDownPassword = (event) => {\n      event.preventDefault();\n    };\n    \n    return (\n      <Grid item sm={3} xs={12} className={scss['panel']}>\n        <Grid direction={panelDirection} container spacing={0}>\n          <Grid\n            item\n            sm={12}\n            xs={12}\n          >\n            <Card className={scss['card']}>\n              <CardContent>\n                <Grid\n                  container \n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={0}>\n                  <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n                    Welcome to Kagoal\n                  </Typography>\n                  <Typography component=\"p\" gutterBottom>\n                    Complete your account in three simple steps\n                  </Typography>\n                </Grid>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth={true}\n                      margin=\"normal\"\n                      label=\"Full Name\"\n                      value={full_name}\n                      onChange={handleChange('full_name')}\n                      className={((errors.full_name) ? scss['is-invalid'] + ' ' : '') + scss['card-element']}\n                      variant=\"outlined\"\n                    />\n                    {errors.full_name && <div className={scss['invalid-feedback']}>{errors.full_name}</div>}\n                    <TextField\n                      fullWidth={true}\n                      margin=\"normal\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      type={showPassword ? 'text' : 'password'}\n                      value={password}\n                      onChange={handleChange('password')}\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              edge=\"end\"\n                              aria-label=\"toggle password visibility\"\n                              onClick={handleClickShowPassword}\n                              onMouseDown={handleMouseDownPassword}\n                            >\n                              {showPassword ? <VisibilityOff /> : <Visibility />}\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                      className={((errors.password) ? scss['is-invalid'] + ' ' : '') + scss['card-element']}\n                    />\n                    {errors.password && <div className={scss['invalid-feedback']}>{errors.password}</div>}\n                    <TextField\n                      fullWidth={true}\n                      margin=\"normal\"\n                      label=\"Team Name\"\n                      value={team_name}\n                      onChange={handleChange('team_name')}\n                      className={((errors.team_name) ? scss['is-invalid'] + ' ' : '') + scss['card-element']}\n                      variant=\"outlined\"\n                    />\n                    {errors.team_name && <div className={scss['invalid-feedback']}>{errors.team_name}</div>}\n                    <FormControlLabel\n                      className={((errors.checked) ? scss['is-invalid'] + ' ' : '') + scss['inline-element']}\n                      control={\n                        <Checkbox\n                          checked={checked}\n                          value={checked}\n                          onChange={handleChange('checked')}\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"I agree to the&nbsp;\"\n                    />\n                    <Link href=\"/terms\" className={scss['inline-element']}>Terms of Use</Link>\n                    <Typography variant=\"subtitle1\" className={scss['inline-element']}>&nbsp;and&nbsp;</Typography>\n                    <Link href=\"/privacy\" className={scss['inline-element']}>Privacy Policy</Link>\n                  </Grid>\n                </Grid>\n                <Grid\n                  container \n                  justify=\"flex-end\"\n                  alignItems=\"flex-end\">\n                  <Button onClick={handleSubmit} variant=\"contained\" size=\"medium\" color=\"primary\" className={scss['continue_btn']}>\n                    Continue\n                  </Button>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n};\n\nRegisterInfo.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  width: PropTypes.string.isRequired,\n  onClickNext: PropTypes.func.isRequired,\n  reg_info: PropTypes.object.isRequired,\n  reg_errors: PropTypes.object.isRequired,\n};\n\nexport default RegisterInfo;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport scss from '../register.module.scss';\n\nconst getQuestions = () => {\n  return {\n    usage: [\n      { id: 1, name: 'Work' },\n      { id: 2, name: 'Personal' },\n      { id: 3, name: 'School' },\n    ],\n    describe: [\n      { id: 1, name: 'I\\'m a bussiness owner' },\n      { id: 2, name: 'I\\'m a team leader' },\n      { id: 3, name: 'I\\'m a team leader' },\n      { id: 4, name: 'I\\'m a team member' },\n      { id: 5, name: 'I\\'m a freelancer' },\n      { id: 6, name: 'I\\'m a director' },\n    ],\n    collaborate: [\n      { id: 1, name: 'Only me' },\n      { id: 2, name: '2-5' },\n      { id: 3, name: '6-10' },\n      { id: 4, name: '11-15' },\n      { id: 5, name: '16-25' },\n      { id: 6, name: '26-50' },\n      { id: 7, name: '51-100' },\n      { id: 8, name: '101-500' },\n      { id: 9, name: '500+' },\n    ],\n    manage: [\n      { id: 1, name: 'Projects for clients' },\n      { id: 2, name: 'Internal projects' },\n      { id: 3, name: 'To-do\\'s & lists' },\n      { id: 4, name: 'Sales & CRM' },\n      { id: 5, name: 'Marketing & creative' },\n      { id: 6, name: 'Product and R&D' },\n      { id: 7, name: 'Orders & production' },\n      { id: 8, name: 'HR & recuriting' },\n      { id: 9, name: 'Other (please specify)' },\n    ],\n    team: [\n      { id: 1, name: 'Administrative' },\n      { id: 2, name: 'Accounting' },\n      { id: 3, name: 'Architecture' },\n      { id: 4, name: 'BI' },\n      { id: 5, name: 'Bussiness Development' },\n      { id: 6, name: 'Bussiness owner' },\n      { id: 7, name: 'Consulting' },\n      { id: 8, name: 'Construction' },\n      { id: 9, name: 'Creative' },\n      { id: 10, name: 'Customer Support' },\n      { id: 11, name: 'Creative' },\n      { id: 12, name: 'Data' },\n      { id: 13, name: 'Design' },\n      { id: 14, name: 'Education' },\n      { id: 15, name: 'Events' },\n      { id: 16, name: 'Finance' },\n      { id: 17, name: 'Healthcare' },\n      { id: 18, name: 'HR' },\n      { id: 19, name: 'IT' },\n      { id: 20, name: 'Manufacturing' },\n      { id: 21, name: 'Marketing' },\n      { id: 22, name: 'Operations' },\n      { id: 23, name: 'Product Management' },\n      { id: 24, name: 'Project Management' },\n      { id: 25, name: 'Real Estate' },\n      { id: 26, name: 'Research' },\n      { id: 27, name: 'Sales' },\n      { id: 28, name: 'Software Engineering' },\n      { id: 29, name: 'Software Development' },\n      { id: 30, name: 'Venture Capital' },\n      { id: 31, name: 'Other' },\n    ],\n  };\n}\n\nclass RegisterQuestion extends React.Component {\n  state = {\n    data: {\n      usage: '',\n      describe: '',\n      collaborate: '',\n      manage: '',\n      team: ''\n    },\n    flag: {\n      submit: true,\n      loading: false,\n    },\n    css: {\n      usage: scss['form_visible'],\n      describe: scss['form_invisible'],\n      collaborate: scss['form_invisible'],\n      manage: scss['form_invisible'],\n      team: scss['form_invisible'],\n      process: scss['process_btn'],\n      submit: scss['continue_btn'],\n    },\n    reg_info: {},\n    reg_errors: {}\n  }\n  \n  UNSAFE_componentWillMount = () => {\n    if (this.props.reg_info) {\n      if (!!Object.keys(this.props.reg_info).length) {\n        this.setState({\n          data: {\n            usage: this.props.reg_info.usage,\n            describe: this.props.reg_info.describe,\n            collaborate: this.props.reg_info.collaborate,\n            manage: this.props.reg_info.manage,\n            team: this.props.reg_info.team,\n          }\n        });\n        let css = this.state.css;\n        if (this.props.reg_info.usage) {\n          css.describe = scss['form_visible'];\n        }\n        if (this.props.reg_info.describe) {\n          css.collaborate = scss['form_visible'];\n        }\n        if (this.props.reg_info.collaborate) {\n          css.manage = scss['form_visible'];\n        }\n        if (this.props.reg_info.manage) {\n          css.team = scss['form_visible'];\n        }\n        this.setState({\n          css: css\n        });\n      }\n    }\n  };\n\n  render() {\n    // Flip container to column on mobile screens.\n    const panelDirection = this.props.width === 'xs' ? 'column' : 'row';\n    const { data, flag, css } = this.state;\n    const classes = this.props.classes;\n\n    const questions = getQuestions();\n    console.log(questions.usage);\n\n    const handleChange = prop => event => {\n      data[prop] = event.target.value;\n      this.setState({\n        data: data\n      });\n      if (prop === 'usage') {\n        css.describe = scss['form_visible'];\n      } else if (prop === 'describe') {\n        css.collaborate = scss['form_visible'];\n      } else if (prop === 'collaborate') {\n        css.manage = scss['form_visible'];\n      } else if (prop === 'manage') {\n        css.team = scss['form_visible'];\n      } else if (prop === 'team') {\n      }\n      this.setState({\n        css: css\n      });\n    }\n\n    const handleSubmit = (event) => {\n      flag.loading = true;\n      flag.submit = false;\n      this.setState({\n        flag: flag\n      });\n      this.props.onClickNext(this.state.data);\n    };\n  \n    return (\n      <Grid item sm={3} xs={12} className={scss['panel']}>\n        <Grid direction={panelDirection} container spacing={0}>\n          <Grid\n            item\n            sm={12}\n            xs={12}\n          >\n            <Card className={scss['card']}>\n              <CardContent>\n                <Grid\n                  container \n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={0}>\n                  <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n                    You're almost there\n                  </Typography>\n                  <Typography component=\"p\" gutterBottom>\n                    Tell us a bit about yourself so we can customize the kagoal for your needs\n                  </Typography>\n                </Grid>\n                <Grid container>\n                  <Grid item xs={12} className={css.usage}>\n                    <Typography component=\"p\">\n                      What will you be using kagoal for?\n                    </Typography>\n                    <FormControl variant=\"outlined\" fullWidth={true} className={classes.formControl}>\n                      <Select\n                        native\n                        value={data.usage}\n                        onChange={handleChange('usage')}\n                        input={\n                          <OutlinedInput name=\"usage\"/>\n                        }\n                      >\n                        <option value=\"\" disabled>Select One</option>\n                        {questions.usage.map(function(item, index) {\n                          return <option value={item.id} key={index}>{item.name}</option>\n                        })};\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} className={css.describe}>\n                    <Typography component=\"p\">\n                      Which of the following describes you best?\n                    </Typography>\n                    <FormControl variant=\"outlined\" fullWidth={true} className={classes.formControl}>\n                      <Select\n                        native\n                        value={data.describe}\n                        onChange={handleChange('describe')}\n                        input={\n                          <OutlinedInput name=\"describe\"/>\n                        }\n                      >\n                        <option value=\"\" disabled>Select One</option>\n                        {questions.describe.map(function(item, index) {\n                          return <option value={item.id} key={index}>{item.name}</option>\n                        })};\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} className={css.collaborate}>\n                    <Typography component=\"p\">\n                      How many people do you want to collaborate with?\n                    </Typography>\n                    <FormControl variant=\"outlined\" fullWidth={true} className={classes.formControl}>\n                      <Select\n                        native\n                        value={data.collaborate}\n                        onChange={handleChange('collaborate')}\n                        input={\n                          <OutlinedInput name=\"collaborate\" className={classes.formControl}/>\n                        }\n                      >\n                        <option value=\"\" disabled>Select One</option>\n                        {questions.collaborate.map(function(item, index) {\n                          return <option value={item.id} key={index}>{item.name}</option>\n                        })};\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} className={css.manage}>\n                    <Typography component=\"p\">\n                      What is the main thing do you want to manage?\n                    </Typography>\n                    <FormControl variant=\"outlined\" fullWidth={true} className={classes.formControl}>\n                      <Select\n                        native\n                        value={data.manage}\n                        onChange={handleChange('manage')}\n                        input={\n                          <OutlinedInput name=\"manage\" className={classes.formControl}/>\n                        }\n                      >\n                        <option value=\"\" disabled>Select One</option>\n                        {questions.manage.map(function(item, index) {\n                          return <option value={item.id} key={index}>{item.name}</option>\n                        })};\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} className={css.team}>\n                    <Typography component=\"p\">\n                      What does your team do?\n                    </Typography>\n                    <FormControl variant=\"outlined\" fullWidth={true} className={classes.formControl}>\n                      <Select\n                        native\n                        value={data.team}\n                        onChange={handleChange('team')}\n                        input={\n                          <OutlinedInput name=\"team\" className={classes.formControl}/>\n                        }\n                      >\n                        <option value=\"\" disabled>Select One</option>\n                        {questions.team.map(function(item, index) {\n                          return <option value={item.id} key={index}>{item.name}</option>\n                        })};\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n                <Grid\n                  container\n                  justify=\"flex-end\"\n                  alignItems=\"flex-end\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={css.submit}\n                    disabled={!flag.submit}\n                    onClick={handleSubmit}\n                  >\n                    Continue\n                    {flag.loading && <CircularProgress size={24} className={css.process} />}\n                  </Button>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n};\n\nRegisterQuestion.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  width: PropTypes.string.isRequired,\n  onClickNext: PropTypes.func.isRequired,\n  reg_info: PropTypes.object.isRequired,\n  reg_errors: PropTypes.object.isRequired,\n};\n\nexport default RegisterQuestion;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { FaRegQuestionCircle } from 'react-icons/fa';\n\nimport scss from '../register.module.scss';\n\nclass RegisterTeam extends React.Component {\n  state = {\n    email1: '',\n    email2: '',\n    email3: '',\n    checked1: true,\n    checked2: true,\n    checked3: true,\n    loading: false,\n    reg_info: {},\n  }\n\n  render() {\n    const panelDirection = this.props.width === 'xs' ? 'column' : 'row';\n    const { email1, checked1, email2, checked2, email3, checked3, loading } = this.state;\n    const { classes } = this.props;\n\n    const handleChange = prop => event => {\n      if (prop === 'checked1' || prop === 'checked2' || prop === 'checked3') {\n        if (event.target.value === 'false') {\n          this.setState({\n            [prop]: true\n          });\n        } else {\n          this.setState({\n            [prop]: false\n          });\n        }\n      } else {\n        this.setState({\n          [prop]: event.target.value\n        });\n      }\n    };\n  \n    const handleSubmit = (event) => {\n      this.setState({\n        submit: true,\n        loading: true,\n      });\n      const team_data = [\n        {\n          email: this.state.email1,\n          admin: this.state.checked1\n        },\n        {\n          email: this.state.email2,\n          admin: this.state.checked2\n        },\n        {\n          email: this.state.email3,\n          admin: this.state.checked3\n        },\n      ];\n      this.props.onClickNext(team_data);\n    };\n\n    const handleSkip = (event) => {\n      this.setState({\n        submit: true,\n        loading: true,\n      });\n      this.props.onClickSkip();\n    }\n\n    return (\n      <Grid item sm={4} xs={12} className={scss['panel']}>\n        <Grid direction={panelDirection} container spacing={0}>\n          <Grid\n            item\n            sm={12}\n            xs={12}\n          >\n            <Card className={scss['card']}>\n              <CardContent>\n                <Grid\n                  container \n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={0}>\n                  <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n                    Who's on your team?\n                  </Typography>\n                  <Typography component=\"p\" gutterBottom>\n                    Invite teammates you'd like to explore the kogal app with\n                  </Typography>\n                </Grid>\n                <Grid\n                  container \n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={0}>\n                  <Grid item xs={8}>\n                    <TextField\n                      label=\"Add mail\"\n                      fullWidth={true}\n                      margin=\"normal\"\n                      name=\"email1\"\n                      value={email1}\n                      onChange={handleChange('email1')}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <FormControlLabel\n                      className={scss['inline-element']}\n                      control={\n                        <Checkbox\n                          checked={checked1}\n                          value={checked1}\n                          onChange={handleChange('checked1')}\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Make Admin\"\n                    />\n                    <FaRegQuestionCircle></FaRegQuestionCircle>\n                  </Grid>\n                </Grid>\n                <Grid\n                  container \n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={0}>\n                  <Grid item xs={8}>\n                    <TextField\n                      label=\"Add mail\"\n                      fullWidth={true}\n                      margin=\"normal\"\n                      name=\"email2\"\n                      value={email2}\n                      onChange={handleChange('email2')}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <FormControlLabel\n                      className={scss['inline-element']}\n                      control={\n                        <Checkbox\n                          checked={checked2}\n                          value={checked2}\n                          onChange={handleChange('checked2')}\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Make Admin\"\n                    />\n                    <FaRegQuestionCircle></FaRegQuestionCircle>\n                  </Grid>\n                </Grid>\n                <Grid\n                  container \n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={0}>\n                  <Grid item xs={8}>\n                    <TextField\n                      label=\"Add mail\"\n                      fullWidth={true}\n                      margin=\"normal\"\n                      name=\"email3\"\n                      value={email3}\n                      onChange={handleChange('email3')}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <FormControlLabel\n                      className={scss['inline-element']}\n                      control={\n                        <Checkbox\n                          checked={checked3}\n                          value={checked3}\n                          onChange={handleChange('checked3')}\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Make Admin\"\n                    />\n                    <FaRegQuestionCircle></FaRegQuestionCircle>\n                  </Grid>\n                </Grid>\n                <Grid\n                  container\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  className={scss['mt_20']}\n                  >\n                  <Grid item xs={8}>                    \n                    <Button onClick={handleSkip} color=\"primary\" className={classes.button} disabled={loading}>\n                      I'll do it later\n                    </Button>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      onClick={handleSubmit} \n                      className={scss['next_container']}\n                      disabled={loading}\n                      variant=\"contained\"\n                      size=\"medium\"\n                      color=\"primary\"\n                      >\n                      Send\n                      {loading && <CircularProgress size={24} className={scss['process_btn']} />}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n};\n\nRegisterTeam.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  width: PropTypes.string.isRequired,\n  onClickNext: PropTypes.func.isRequired,\n  onClickSkip: PropTypes.func.isRequired,\n  reg_info: PropTypes.object.isRequired,\n};\n\nexport default RegisterTeam;","import React from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\n\nimport withWidth from '@material-ui/core/withWidth';\nimport Grid from '@material-ui/core/Grid';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport themeStyles from './register.theme.style';\n\nimport RegisterEmail from './components/register.email.component';\nimport RegisterInfo from './components/register.info.component';\nimport RegisterQuestion from './components/register.question.component';\nimport RegisterTeam from './components/register.team.component';\n\nimport { registerUser, inviteMember, gotoDashboard } from '../../../actions/authentication';\n\nconst getSteps = () => {\n  return ['Input Email', 'Insert Information', 'Answer the Questions', 'Init Team'];\n}\n\nclass Register extends React.Component {\n  state = {\n    activeStep: 0,\n    user: {\n      email: '',\n      full_name: '',\n      password: '',\n      team_name: '',\n      usage: '',\n      describe: '',\n      collaborate: '',\n      manage: '',\n      team: ''\n    },\n    submit: false,\n    reg_info: {},\n    reg_errors: {},\n  }  \n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.state.submit) {\n      if (nextProps.reg_errors.email) {\n        this.setState({\n          reg_info: nextProps.reg_info,\n          reg_errors: nextProps.reg_errors\n        });\n        this.setStep(0);\n      }\n      if (nextProps.res_type === 'register') {\n        this.nextStep();\n      }\n    }\n  }\n\n  setStep = (step) => {\n    this.setState({\n      activeStep: step,\n      submit: false\n    });\n  }\n\n  nextStep = () => {\n    const { activeStep } = this.state;\n    this.setState({\n      activeStep: activeStep + 1,\n      submit: false\n    });\n  }\n\n  render() {\n    const { classes, width } = this.props;\n    const steps = getSteps();\n    const { activeStep, user, reg_info, reg_errors } = this.state;\n\n    const handleEmailStore = (data) => {\n      user.email = data;\n      this.setState({\n        user: user\n      });\n      this.nextStep();\n    }\n\n    const handleInfoStore = (data) => {\n      user.full_name = data.full_name;\n      user.password = data.password;\n      user.team_name = data.team_name;\n      this.setState({\n        user: user\n      });\n      this.nextStep();\n    }\n\n    const handleQuestionStore = (data) => {\n      user.usage = data.usage;\n      user.describe = data.describe;\n      user.collaborate = data.collaborate;\n      user.manage = data.manage;\n      user.team = data.team;\n      this.setState({\n        user: user,\n        submit: true\n      });\n      this.props.registerUser(user);\n    }\n    \n    const handleInitTeam = (data) => {\n      this.props.inviteMember({email: this.state.user.email, password: this.state.user.password, members: data }, this.props.history);\n    }\n\n    const handleGotoDashboard = () => {\n      this.props.gotoDashboard({email: this.state.user.email, password: this.state.user.password }, this.props.history);\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        spacing={0}\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.background}\n      >\n        {steps.map(function(label, level) {\n          if (level === activeStep) {\n            if (level === 0) {\n              return <RegisterEmail key={level} classes={classes} width={width} onClickNext={handleEmailStore} reg_info={reg_info} reg_errors={reg_errors}></RegisterEmail>\n            } else if (level === 1) {\n              return <RegisterInfo key={level} classes={classes} width={width} onClickNext={handleInfoStore} reg_info={reg_info} reg_errors={reg_errors}></RegisterInfo>\n            } else if (level === 2) {\n              return <RegisterQuestion key={level} classes={classes} width={width} onClickNext={handleQuestionStore} reg_info={reg_info} reg_errors={reg_errors}></RegisterQuestion>\n            } else if (level === 3) {\n              return <RegisterTeam key={level} classes={classes} width={width} onClickNext={handleInitTeam} onClickSkip={handleGotoDashboard} reg_info={reg_info} reg_errors={reg_errors}></RegisterTeam>\n            } else {\n              return <span key={level}></span>\n            }\n          } else {\n            return <span key={level}></span>\n          }\n        })}\n      </Grid>\n    );    \n  }\n};\n\nRegister.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  width: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  reg_info: state.req_info,\n  reg_errors: state.errors,\n  res_type: state.res_type,\n});\n\nexport default compose(withWidth(), withStyles(themeStyles, { withTheme: true }), connect(mapStateToProps, { registerUser, inviteMember, gotoDashboard }))(Register);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"register_panel__3GxrU\",\"portal-login\":\"register_portal-login__Aa0jw\",\"card\":\"register_card__Qu9Q3\",\"submit_btn\":\"register_submit_btn__26LOD\",\"card-content\":\"register_card-content__2pu8O\",\"is-invalid\":\"register_is-invalid__2STw7\",\"invalid-feedback\":\"register_invalid-feedback__2UnbJ\",\"inline-element\":\"register_inline-element__1EKX9\",\"continue_btn\":\"register_continue_btn__2oc6k\",\"form_visible\":\"register_form_visible__2pEhT\",\"form_invisible\":\"register_form_invisible__3RwSe\",\"next_container\":\"register_next_container__2sflF\",\"process_btn\":\"register_process_btn__2P5Ts\"};","const isEmail = (value) => {\n  const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (reg.test(String(value).toLowerCase())) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default isEmail;","const pssswordStrength = (value) => {\n  if (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n  ) {\n    return 'no_input';\n  } else if (typeof value === 'string' && value.trim().length < 8) {\n    return 'weak'\n  } else {\n    return 'strong'\n  }\n}\n\nexport default pssswordStrength;"],"sourceRoot":""}