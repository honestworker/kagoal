{"version":3,"sources":["containers/authentication/profile/profile.module.scss","containers/authentication/profile/profile.theme.style.js","containers/authentication/profile/components/profile-tabs.component.js","containers/authentication/profile/profile.component.js"],"names":["module","exports","shadeColor","color","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","styles","theme","background","palette","secondary","main","overflow","TabContainer","children","dir","Typography","component","style","padding","ProfileTabs","state","value","name","lastname","email","password","newpassword","confirmpassword","handleChange","event","setState","target","props","isEnabled","handleTabChange","handleChangeIndex","index","length","newPassword","confirmPassword","this","classes","errors","validate","pwdErrors","validatePassword","className","root","AppBar","position","Tabs","onChange","indicatorColor","textColor","fullWidth","Tab","tabLabel","label","icon","axis","direction","onChangeIndex","container","autoComplete","Grid","item","sm","xs","TextField","id","textField","error","variant","required","margin","FormHelperText","defaultValue","multiline","rowsMax","rows","type","toggleContainer","Switch","checked","React","Component","withStyles","width","height","display","flexWrap","maxWidth","textTransform","flexDirection","boxSizing","alignItems","withTheme","Profile","snackbarOpen","snackbarMessage","onSnackbarOpen","onSnackbarClose","checkIfEnabled","snackbar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","spacing","justify","classNames","scss","panel","alt","src","gutterBottom","Card","card","CardContent","CardActions","Button","disabled","onClick","compose","withWidth","themeStyles"],"mappings":"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","file":"static/js/44.e3cef873.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"portal-profile\":\"profile_portal-profile__JbjeW\",\"portal-profile-before\":\"profile_portal-profile-before__xZdMV\",\"portal-profile-after\":\"profile_portal-profile-after__1kdTz\",\"panel\":\"profile_panel__30lr_\",\"portal-login\":\"profile_portal-login__2bCDk\",\"portal-profile__header\":\"profile_portal-profile__header__1BMkp\",\"portal-profile__header-avatar\":\"profile_portal-profile__header-avatar__1M3Zy\",\"portal-profile__content\":\"profile_portal-profile__content__3bmFR\",\"card\":\"profile_card__EqFnp\",\"card-content\":\"profile_card-content__3L8ml\",\"card-actions\":\"profile_card-actions__1_Vpm\"};","function shadeColor(color, percent) {\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\", \"&\"] }] */\n  const f = parseInt(color.slice(1), 16);\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n  const R = f >> 16;\n  const G = (f >> 8) & 0x00FF;\n  const B = f & 0x0000FF;\n  return '#'+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1); // eslint-disable-line\n}\n\nconst styles = theme => ({\n  background: {\n    background: shadeColor(theme.palette.secondary.main, 0.22),\n    '&:before': {\n      background: shadeColor(theme.palette.secondary.main, 0.12)\n    },\n    '&:after': {\n      background: theme.palette.secondary.main\n    },\n    overflow: 'auto',\n    color: '#fff'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport PersonPin from '@material-ui/icons/PersonPin';\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport Group from '@material-ui/icons/Group';\nimport Share from '@material-ui/icons/Share';\nimport Notifications from '@material-ui/icons/Notifications';\nimport NotificationsActive from '@material-ui/icons/NotificationsActive';\nimport Security from '@material-ui/icons/Security';\nimport Backup from '@material-ui/icons/Backup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  tabLabel: {\n    maxWidth: '100%',\n    textTransform: 'capitalize'\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    boxSizing: 'border-box',\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nclass ProfileTabs extends React.Component {\n  state = {\n    value: 0,\n    name: 'Christos',\n    lastname: 'Pantazis',\n    email: 'info@oxygenna.com',\n    password: '',\n    newpassword: '',\n    confirmpassword: ''\n  };\n\n  validate(name, lastname, email) {\n    // true means invalid, so our conditions got reversed\n    return {\n      name: name.length === 0,\n      lastname: lastname.length === 0,\n      email: email.length === 0\n    };\n  }\n  validatePassword(password, newPassword, confirmPassword) {\n    // true means invalid, so our conditions got reversed\n    return {\n      password: password.length === 0,\n      newPassword: newPassword.length === 0,\n      confirmPassword: confirmPassword.length === 0\n    };\n  }\n  handleChange = name => (event) => {\n    this.setState({\n      [name]: event.target.value\n    }, () => {\n      // Using the callback to make sure that the child state has been updated before updating the parent state\n      this.props.isEnabled(this.state.name, this.state.lastname, this.state.email);\n    });\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { name, lastname, email, password, newpassword, confirmpassword } = this.state;\n    const errors = this.validate(name, lastname, email);\n    const pwdErrors = this.validatePassword(password, newpassword, confirmpassword);\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={this.state.value}\n            onChange={this.handleTabChange}\n            indicatorColor=\"primary\"\n            textColor=\"secondary\"\n            fullWidth={true}\n          >\n            <Tab className={classes.tabLabel} label=\"Profile\" icon={<AccountCircle />}/>\n            <Tab className={classes.tabLabel} label=\"Change Password\" icon={<Security />}/>\n            <Tab className={classes.tabLabel} label=\"Notifications\" icon={<Notifications />}/>\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={this.state.value}\n          onChangeIndex={this.handleChangeIndex}\n        >\n          <TabContainer dir={theme.direction}>\n            <form className={classes.container} autoComplete=\"off\">\n              <Grid container>\n                <Grid item sm={6} xs={12}>\n                  <TextField\n                    id=\"name\"\n                    label=\"Enter your first name\"\n                    className={classes.textField}\n                    error={errors.name}\n                    value={name}\n                    onChange={this.handleChange('name')}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    required\n                    margin=\"normal\"\n                  />\n                  { errors.name &&\n                  <FormHelperText error>This is a required field</FormHelperText>\n                  }\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                  <TextField\n                    id=\"lastname\"\n                    label=\"Enter your last name\"\n                    className={classes.textField}\n                    error={errors.lastname}\n                    value={lastname}\n                    onChange={this.handleChange('lastname')}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    required\n                    margin=\"normal\"\n                  />\n                  { errors.lastname &&\n                  <FormHelperText error>We also need your last name</FormHelperText>\n                  }\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"email\"\n                    label=\"Enter your email address\"\n                    className={classes.textField}\n                    error={errors.email}\n                    value={email}\n                    onChange={this.handleChange('email')}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    required\n                    margin=\"normal\"\n                  />\n                  { errors.email &&\n                  <FormHelperText error>Please enter your email</FormHelperText>\n                  }\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"location\"\n                    label=\"Enter your location\"\n                    className={classes.textField}\n                    defaultValue=\"Sitia, Crete, Greece\"\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"website\"\n                    label=\"Website\"\n                    className={classes.textField}\n                    defaultValue=\"http://www.oxygenna.com\"\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"description\"\n                    label=\"Describe yourself in 255 characters\"\n                    className={classes.textField}\n                    defaultValue=\"We are a small creative web design agency who are passionate with our pixels.\"\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    multiline\n                    rowsMax=\"4\"\n                    rows=\"4\"\n                    margin=\"normal\"\n                  />\n                </Grid>\n              </Grid>\n            </form>\n          </TabContainer>\n          <TabContainer dir={theme.direction}>\n            <form className={classes.container} autoComplete=\"off\">\n              <Grid container>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"password\"\n                    label=\"Current password\"\n                    className={classes.textField}\n                    error={pwdErrors.password}\n                    value={password}\n                    type=\"password\"\n                    onChange={this.handleChange('password')}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    required\n                    margin=\"normal\"\n                  />\n                  { pwdErrors.password &&\n                  <FormHelperText error>This is a required field</FormHelperText>\n                  }\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"newpassword\"\n                    label=\"New password\"\n                    className={classes.textField}\n                    error={pwdErrors.newPassword}\n                    value={newpassword}\n                    type=\"password\"\n                    onChange={this.handleChange('newpassword')}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    required\n                    margin=\"normal\"\n                  />\n                  { pwdErrors.newPassword &&\n                  <FormHelperText error>This is a required field</FormHelperText>\n                  }\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"confirmpassword\"\n                    label=\"Confirm password\"\n                    className={classes.textField}\n                    error={pwdErrors.confirmPassword}\n                    value={confirmpassword}\n                    type=\"password\"\n                    onChange={this.handleChange('confirmpassword')}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    required\n                    margin=\"normal\"\n                  />\n                  { pwdErrors.confirmPassword &&\n                  <FormHelperText error>This is a required field</FormHelperText>\n                  }\n                </Grid>\n              </Grid>\n            </form>\n          </TabContainer>\n          <TabContainer dir={theme.direction}>\n            <Grid\n              container\n              direction=\"row\"\n            >\n              <Grid item sm={6} xs={12}>\n                <div className={classes.toggleContainer}>\n                  <LocationOn color=\"secondary\"/>\n                  <Switch />\n                  <Typography component=\"p\">Show my location</Typography>\n                </div>\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <div className={classes.toggleContainer}>\n                  <PersonPin color=\"secondary\"/>\n                  <Switch checked=\"true\" />\n                  <Typography component=\"p\">Show my avatar</Typography>\n                </div>\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <div className={classes.toggleContainer}>\n                  <Group color=\"secondary\"/>\n                  <Switch checked=\"true\" />\n                  <Typography component=\"p\">Show my connections</Typography>\n                </div>\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <div className={classes.toggleContainer}>\n                  <Share color=\"secondary\"/>\n                  <Switch checked=\"true\" />\n                  <Typography component=\"p\">Show social links</Typography>\n                </div>\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <div className={classes.toggleContainer}>\n                  <NotificationsActive color=\"secondary\"/>\n                  <Switch />\n                  <Typography component=\"p\">Send Notifications</Typography>\n                </div>\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <div className={classes.toggleContainer}>\n                  <Backup color=\"secondary\"/>\n                  <Switch />\n                  <Typography component=\"p\">Allow cloud backups</Typography>\n                </div>\n              </Grid>\n            </Grid>\n          </TabContainer>\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nProfileTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ProfileTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport classNames from 'classnames';\nimport withWidth from '@material-ui/core/withWidth';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport themeStyles from './profile.theme.style';\nimport scss from './profile.module.scss';\n\nimport ProfileTabs from './components/profile-tabs.component';\n\nclass Profile extends React.Component {\n  state = {\n    isEnabled: true,\n    snackbarOpen: false,\n    snackbarMessage: ''\n  }\n\n  onSnackbarOpen = () => {\n    this.setState({ snackbarOpen: true });\n  }\n\n  onSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  }\n\n  // We need all required fields to NOT be empty for the button to be enabled.\n  checkIfEnabled = (name, lastname, email) => {\n    if (name && lastname && email) {\n      this.setState({isEnabled: true});\n    } else {\n      this.setState({isEnabled: false})\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { isEnabled } = this.state;\n\n    const snackbar = (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={this.state.snackbarOpen}\n        autoHideDuration={3000}\n        onClose={this.onSnackbarClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Settings Updated</span>}\n      />\n    );\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        spacing={0}\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classNames(\n          scss['portal-profile'],\n          classes.background\n        )}\n      >\n        <Grid item sm={10} xs={12} className={scss.panel}>\n          <Grid direction='column' container spacing={10}>\n            <Grid\n              item\n              xs={12}\n            >\n              <Grid\n                container\n                direction='row'\n                spacing={0}\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid\n                  item\n                  xs={12}\n                >\n                  <div className={scss['portal-profile__header']}>\n                    <img alt=\"avatar\" src=\"assets/images/avatars/male/16.jpg\" className={scss['portal-profile__header-avatar']} />\n                    <div>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Profile / Christos\n                      </Typography>\n                      <Typography variant=\"subtitle2\" gutterBottom>\n                        Edit your perfonal information, change your password and set your privacy settings here.\n                      </Typography>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n            >\n              <div className={scss['portal-profile__content']}>\n                <Card className={scss.card}>\n                  <CardContent className={scss['card-content']}>\n                    <Grid container>\n                      <ProfileTabs isEnabled={this.checkIfEnabled}/>\n                    </Grid>\n                  </CardContent>\n                  <CardActions className={scss['card-actions']}>\n                    <Button disabled={!isEnabled} variant=\"contained\" color=\"secondary\" onClick={() => this.onSnackbarOpen()}>\n                      Update Settings\n                    </Button>\n                  </CardActions>\n                </Card>\n              </div>\n            </Grid>\n          </Grid>\n        </Grid>\n        {snackbar}\n      </Grid>\n    );\n  }\n}\n\nProfile.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default compose(withWidth(), withStyles(themeStyles, { withTheme: true }))(Profile);\n"],"sourceRoot":""}