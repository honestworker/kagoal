{"version":3,"sources":["containers/elements/select/examples/simple-select-example.js","containers/elements/select/examples/native-select-example.js","containers/elements/select/examples/multiple-select-example.js","containers/elements/select/examples/dialog-select-example.js","containers/elements/select/select.component.js","containers/elements/select/examples/simple-select-example-raw.js","containers/elements/select/examples/native-select-example-raw.js","containers/elements/select/examples/multiple-select-example-raw.js","containers/elements/select/examples/dialog-select-example-raw.js","components/markdown-element.component.js","components/demo.component.js"],"names":["SimpleSelect","state","age","name","handleChange","event","setState","target","value","classes","this","props","className","container","autoComplete","FormControl","formControl","InputLabel","htmlFor","onChange","inputProps","id","MenuItem","input","Input","FormHelperText","displayEmpty","selectEmpty","disabled","error","renderValue","readOnly","autoWidth","React","Component","withStyles","theme","display","flexWrap","margin","spacing","minWidth","marginTop","NativeSelect","native","label","defaultValue","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","names","MultipleSelect","root","multiple","map","key","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","selected","join","Checkbox","checked","ListItemText","primary","chips","Chip","chip","maxWidth","withTheme","DialogSelect","open","Number","handleClickOpen","handleClose","Button","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","color","Select","Grid","item","xs","Paper","Typography","variant","gutterBottom","index","js","SimpleSelectExample","raw","NativeSelectExample","MultipleSelectExample","DialogSelectExample","renderer","marked","Renderer","setOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","langPrefix","highlight","code","lang","language","prism","languages","diff","css","jsx","fontFamily","fontSize","palette","text","position","padding","backgroundColor","background","paper","borderRadius","overflow","type","common","white","textShadow","black","lineHeight","display2","secondary","display1","headline","title","wordBreak","opacity","hint","height","fill","overflowX","borderCollapse","borderSpacing","borderBottom","divider","textAlign","paddingRight","whiteSpace","borderLeft","main","textDecoration","flip","other","classNames","dangerouslySetInnerHTML","__html","Demo","codeOpen","codesandboxForm","handleClickCodeOpen","DemoComponent","header","Tooltip","placement","IconButton","aria-labelledby","Collapse","in","unmountOnExit","dir","demo","marginBottom","marginLeft","marginRight","clear","breakpoints","up","mixins","gutters","grey","justifyContent","paddingTop","paddingBottom","paddingLeft","zIndex","top","right"],"mappings":"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","file":"static/js/47.20f70850.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass SimpleSelect extends React.Component {\n  state = {\n    age: '',\n    name: 'hai'\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} autoComplete=\"off\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            inputProps={{\n              name: 'age',\n              id: 'age-simple'\n            }}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-helper\">Age</InputLabel>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            input={<Input name=\"age\" id=\"age-helper\" />}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n          <FormHelperText>Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            displayEmpty\n            name=\"age\"\n            className={classes.selectEmpty}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n          <FormHelperText>Without label</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\n          <Select\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input name=\"name\" id=\"name-disabled\" />}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value=\"hai\">Hai</MenuItem>\n            <MenuItem value=\"olivier\">Olivier</MenuItem>\n            <MenuItem value=\"kevin\">Kevin</MenuItem>\n          </Select>\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error>\n          <InputLabel htmlFor=\"name-error\">Name</InputLabel>\n          <Select\n            value={this.state.name}\n            onChange={this.handleChange}\n            name=\"name\"\n            renderValue={value => `⚠️  - ${value}`}\n            input={<Input id=\"name-error\" />}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value=\"hai\">Hai</MenuItem>\n            <MenuItem value=\"olivier\">Olivier</MenuItem>\n            <MenuItem value=\"kevin\">Kevin</MenuItem>\n          </Select>\n          <FormHelperText>Error</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"name-input\">Name</InputLabel>\n          <Input id=\"name-input\" />\n          <FormHelperText>Alignment with an input</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"name-readonly\">Name</InputLabel>\n          <Select\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input name=\"name\" id=\"name-readonly\" readOnly />}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value=\"hai\">Hai</MenuItem>\n            <MenuItem value=\"olivier\">Olivier</MenuItem>\n            <MenuItem value=\"kevin\">Kevin</MenuItem>\n          </Select>\n          <FormHelperText>Read only</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            input={<Input name=\"age\" id=\"age-simple\" />}\n            autoWidth\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n          <FormHelperText>Auto width</FormHelperText>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\nSimpleSelect.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(SimpleSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass NativeSelect extends React.Component {\n  state = {\n    age: '',\n    name: 'hai'\n  };\n\n  handleChange = name => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n          <Select\n            native\n            value={this.state.age}\n            onChange={this.handleChange('age')}\n            inputProps={{\n              id: 'age-native-simple'\n            }}\n          >\n            <option value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-helper\">Age</InputLabel>\n          <Select\n            native\n            value={this.state.age}\n            onChange={this.handleChange('age')}\n            input={<Input id=\"age-native-helper\" />}\n          >\n            <option value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n          <FormHelperText>Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <Select\n            native\n            value={this.state.age}\n            onChange={this.handleChange('age')}\n            className={classes.selectEmpty}\n          >\n            <option value=\"\">None</option>\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n          <FormHelperText>Without label</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor=\"name-native-disabled\">Name</InputLabel>\n          <Select\n            native\n            value={this.state.name}\n            onChange={this.handleChange('name')}\n            input={<Input id=\"name-native-disabled\" />}\n          >\n            <option value=\"\" />\n            <optgroup label=\"Author\">\n              <option value=\"hai\">Hai</option>\n            </optgroup>\n            <optgroup label=\"Contributors\">\n              <option value=\"olivier\">Olivier</option>\n              <option value=\"kevin\">Kevin</option>\n            </optgroup>\n          </Select>\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error>\n          <InputLabel htmlFor=\"name-native-error\">Name</InputLabel>\n          <Select\n            native\n            value={this.state.name}\n            onChange={this.handleChange('name')}\n            input={<Input id=\"name-native-error\" />}\n          >\n            <option value=\"\" />\n            <optgroup label=\"Author\">\n              <option value=\"hai\">Hai</option>\n            </optgroup>\n            <optgroup label=\"Contributors\">\n              <option value=\"olivier\">Olivier</option>\n              <option value=\"kevin\">Kevin</option>\n            </optgroup>\n          </Select>\n          <FormHelperText>Error</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"name-input\">Name</InputLabel>\n          <Input id=\"name-input\" />\n          <FormHelperText>Alignment with an input</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"uncontrolled-native\">Name</InputLabel>\n          <Select native defaultValue={30} input={<Input id=\"uncontrolled-native\" />}>\n            <option value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n          <FormHelperText>Uncontrolled</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nNativeSelect.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(NativeSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing(1) / 4,\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nclass MultipleSelect extends React.Component {\n  state = {\n    name: [],\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple\" />}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={{\n                  fontWeight:\n                    this.state.name.indexOf(name) === -1\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-checkbox\">Tag</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-checkbox\" />}\n            renderValue={selected => selected.join(', ')}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem key={name} value={name}>\n                <Checkbox checked={this.state.name.indexOf(name) > -1} />\n                <ListItemText primary={name} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => <Chip key={value} label={value} className={classes.chip} />)}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={{\n                  fontWeight:\n                    this.state.name.indexOf(name) === -1\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MultipleSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n});\n\nclass DialogSelect extends React.Component {\n  state = {\n    open: false,\n    age: ''\n  };\n\n  handleChange = name => (event) => {\n    this.setState({ [name]: Number(event.target.value) });\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Button onClick={this.handleClickOpen}>Open select dialog</Button>\n        <Dialog\n          disableBackdropClick\n          disableEscapeKeyDown\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <DialogTitle>Fill the form</DialogTitle>\n          <DialogContent>\n            <form className={classes.container}>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n                <Select\n                  native\n                  value={this.state.age}\n                  onChange={this.handleChange('age')}\n                  input={<Input id=\"age-native-simple\" />}\n                >\n                  <option value=\"\" />\n                  <option value={10}>Ten</option>\n                  <option value={20}>Twenty</option>\n                  <option value={30}>Thirty</option>\n                </Select>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\n                <Select\n                  value={this.state.age}\n                  onChange={this.handleChange('age')}\n                  input={<Input id=\"age-simple\" />}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </FormControl>\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nDialogSelect.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(DialogSelect);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Demo from '../../../components/demo.component';\n\nimport SimpleSelectExample from './examples/simple-select-example';\nimport SimpleSelectExampleRaw from './examples/simple-select-example-raw';\n\nimport NativeSelectExample from './examples/native-select-example';\nimport NativeSelectExampleRaw from './examples/native-select-example-raw';\n\nimport MultipleSelectExample from './examples/multiple-select-example';\nimport MultipleSelectExampleRaw from './examples/multiple-select-example-raw';\n\nimport DialogSelectExample from './examples/dialog-select-example';\nimport DialogSelectExampleRaw from './examples/dialog-select-example-raw';\n\nconst Select = () => (\n  <div>\n    <section className=\"portal-pages__header\">\n      <div className=\"portal-pages__header-demo\">\n        <DialogSelectExample />\n      </div>\n    </section>\n    <Grid container spacing={0}>\n      <Grid item xs={1} />\n      <Grid item xs={10}>\n        <Paper className=\"portal-pages__content-inner\">\n          <Typography variant=\"h6\" gutterBottom>Select</Typography>\n          <h2>Simple Selects</h2>\n          <p>\n            Menus are positioned over their emitting elements such that the currently selected menu item appears\n            on top of the emitting element.\n          </p>\n          <Demo index={1} js={SimpleSelectExample} raw={SimpleSelectExampleRaw} />\n          <h2>Native Select</h2>\n          <p>As the user experience can be improved on mobile using the native select of the platform, we allow such pattern.</p>\n          <Demo index={2} js={NativeSelectExample} raw={NativeSelectExampleRaw} />\n          <h2>Multiple Select</h2>\n          <p>The <code>Select</code> component can handle multiple selections. It's enabled with the multiple property.</p>\n          <Demo index={3} js={MultipleSelectExample} raw={MultipleSelectExampleRaw} />\n          <h2>With a Dialog</h2>\n          <p>While it is not encouraged by the Material Design specification, you can use a select inside a dialog.</p>\n          <Demo index={4} js={DialogSelectExample} raw={DialogSelectExampleRaw} />\n        </Paper>\n      </Grid>\n      <Grid item xs={1} />\n    </Grid>\n  </div>\n);\n\nexport default Select;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass SimpleSelect extends React.Component {\n  state = {\n    age: '',\n    name: 'hai'\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} autoComplete=\"off\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            inputProps={{\n              name: 'age',\n              id: 'age-simple'\n            }}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-helper\">Age</InputLabel>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            input={<Input name=\"age\" id=\"age-helper\" />}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n          <FormHelperText>Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            displayEmpty\n            name=\"age\"\n            className={classes.selectEmpty}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n          <FormHelperText>Without label</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\n          <Select\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input name=\"name\" id=\"name-disabled\" />}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value=\"hai\">Hai</MenuItem>\n            <MenuItem value=\"olivier\">Olivier</MenuItem>\n            <MenuItem value=\"kevin\">Kevin</MenuItem>\n          </Select>\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error>\n          <InputLabel htmlFor=\"name-error\">Name</InputLabel>\n          <Select\n            value={this.state.name}\n            onChange={this.handleChange}\n            name=\"name\"\n            renderValue={value => \\`⚠️  - \\${value}\\`}\n            input={<Input id=\"name-error\" />}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value=\"hai\">Hai</MenuItem>\n            <MenuItem value=\"olivier\">Olivier</MenuItem>\n            <MenuItem value=\"kevin\">Kevin</MenuItem>\n          </Select>\n          <FormHelperText>Error</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"name-input\">Name</InputLabel>\n          <Input id=\"name-input\" />\n          <FormHelperText>Alignment with an input</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"name-readonly\">Name</InputLabel>\n          <Select\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input name=\"name\" id=\"name-readonly\" readOnly />}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value=\"hai\">Hai</MenuItem>\n            <MenuItem value=\"olivier\">Olivier</MenuItem>\n            <MenuItem value=\"kevin\">Kevin</MenuItem>\n          </Select>\n          <FormHelperText>Read only</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\n          <Select\n            value={this.state.age}\n            onChange={this.handleChange}\n            input={<Input name=\"age\" id=\"age-simple\" />}\n            autoWidth\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n          <FormHelperText>Auto width</FormHelperText>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\nSimpleSelect.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(SimpleSelect);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass NativeSelect extends React.Component {\n  state = {\n    age: '',\n    name: 'hai'\n  };\n\n  handleChange = name => (event) => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n          <Select\n            native\n            value={this.state.age}\n            onChange={this.handleChange('age')}\n            inputProps={{\n              id: 'age-native-simple'\n            }}\n          >\n            <option value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-native-helper\">Age</InputLabel>\n          <Select\n            native\n            value={this.state.age}\n            onChange={this.handleChange('age')}\n            input={<Input id=\"age-native-helper\" />}\n          >\n            <option value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n          <FormHelperText>Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <Select\n            native\n            value={this.state.age}\n            onChange={this.handleChange('age')}\n            className={classes.selectEmpty}\n          >\n            <option value=\"\">None</option>\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n          <FormHelperText>Without label</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor=\"name-native-disabled\">Name</InputLabel>\n          <Select\n            native\n            value={this.state.name}\n            onChange={this.handleChange('name')}\n            input={<Input id=\"name-native-disabled\" />}\n          >\n            <option value=\"\" />\n            <optgroup label=\"Author\">\n              <option value=\"hai\">Hai</option>\n            </optgroup>\n            <optgroup label=\"Contributors\">\n              <option value=\"olivier\">Olivier</option>\n              <option value=\"kevin\">Kevin</option>\n            </optgroup>\n          </Select>\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error>\n          <InputLabel htmlFor=\"name-native-error\">Name</InputLabel>\n          <Select\n            native\n            value={this.state.name}\n            onChange={this.handleChange('name')}\n            input={<Input id=\"name-native-error\" />}\n          >\n            <option value=\"\" />\n            <optgroup label=\"Author\">\n              <option value=\"hai\">Hai</option>\n            </optgroup>\n            <optgroup label=\"Contributors\">\n              <option value=\"olivier\">Olivier</option>\n              <option value=\"kevin\">Kevin</option>\n            </optgroup>\n          </Select>\n          <FormHelperText>Error</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"name-input\">Name</InputLabel>\n          <Input id=\"name-input\" />\n          <FormHelperText>Alignment with an input</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"uncontrolled-native\">Name</InputLabel>\n          <Select native defaultValue={30} input={<Input id=\"uncontrolled-native\" />}>\n            <option value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n          <FormHelperText>Uncontrolled</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nNativeSelect.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(NativeSelect);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing(1) / 4,\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nclass MultipleSelect extends React.Component {\n  state = {\n    name: [],\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple\" />}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={{\n                  fontWeight:\n                    this.state.name.indexOf(name) === -1\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-checkbox\">Tag</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-checkbox\" />}\n            renderValue={selected => selected.join(', ')}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem key={name} value={name}>\n                <Checkbox checked={this.state.name.indexOf(name) > -1} />\n                <ListItemText primary={name} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => <Chip key={value} label={value} className={classes.chip} />)}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={{\n                  fontWeight:\n                    this.state.name.indexOf(name) === -1\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MultipleSelect);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n});\n\nclass DialogSelect extends React.Component {\n  state = {\n    open: false,\n    age: ''\n  };\n\n  handleChange = name => (event) => {\n    this.setState({ [name]: Number(event.target.value) });\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Button onClick={this.handleClickOpen}>Open select dialog</Button>\n        <Dialog\n          disableBackdropClick\n          disableEscapeKeyDown\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <DialogTitle>Fill the form</DialogTitle>\n          <DialogContent>\n            <form className={classes.container}>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n                <Select\n                  native\n                  value={this.state.age}\n                  onChange={this.handleChange('age')}\n                  input={<Input id=\"age-native-simple\" />}\n                >\n                  <option value=\"\" />\n                  <option value={10}>Ten</option>\n                  <option value={20}>Twenty</option>\n                  <option value={30}>Thirty</option>\n                </Select>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\n                <Select\n                  value={this.state.age}\n                  onChange={this.handleChange('age')}\n                  input={<Input id=\"age-simple\" />}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </FormControl>\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nDialogSelect.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(DialogSelect);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport marked from 'marked';\nimport { withStyles } from '@material-ui/core/styles';\nimport prism from 'prismjs';\n\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-diff';\nimport 'prismjs/components/prism-jsx';\n\nimport 'prismjs/themes/prism.css';\n\nconst renderer = new marked.Renderer();\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  // prism uses the following class prefix.\n  langPrefix: 'language-',\n  highlight(code, lang) {\n    let language;\n    switch (lang) {\n    case 'diff':\n      language = prism.languages.diff;\n      break;\n\n    case 'css':\n      language = prism.languages.css;\n      break;\n\n    case 'js':\n    case 'jsx':\n    default:\n      language = prism.languages.jsx;\n      break;\n    }\n    return prism.highlight(code, language);\n  },\n  renderer\n});\n\n// in case we don't import the prism theme, we can use the following JSS\nconst styles = theme => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 16,\n    color: theme.palette.text.primary,\n    '& .anchor-link': {\n      marginTop: -theme.spacing(10), // Offset for the anchor.\n      position: 'absolute'\n    },\n    '& pre, & pre[class*=\"language-\"]': {\n      margin: `${theme.spacing(3)}px 0`,\n      padding: '12px 18px',\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: 3,\n      overflow: 'auto'\n    },\n    '& code[class*=\"language-\"]': {\n      color: theme.palette.type === 'light' ? theme.palette.text.primary : theme.palette.common.white,\n      textShadow: `0 1px ${theme.palette.type === 'light' ? theme.palette.common.white : theme.palette.common.black}`\n    },\n    '& .token.tag': {\n      color: theme.palette.type === 'light' ? '#905' : '#fb83ae'\n    },\n    '& .token.attr-name': {\n      color: theme.palette.type === 'light' ? '#690' : '#a6e22e'\n    },\n    '& p code, & ul code, & pre code': {\n      fontSize: 14,\n      lineHeight: 1.6\n    },\n    '& h1': {\n      ...theme.typography.display2,\n      color: theme.palette.text.secondary,\n      margin: '0.7em 0'\n    },\n    '& h2': {\n      ...theme.typography.display1,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& h3': {\n      ...theme.typography.headline,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& h4': {\n      ...theme.typography.title,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& p, & ul, & ol': {\n      lineHeight: 1.6\n    },\n    '& h1, & h2, & h3, & h4': {\n      '& code': {\n        fontSize: 'inherit',\n        lineHeight: 'inherit',\n        // Remove scroll on small screens.\n        wordBreak: 'break-word'\n      },\n      '& .anchor-link-style': {\n        opacity: 0,\n        // To prevent the link to get the focus.\n        display: 'none'\n      },\n      '&:hover .anchor-link-style': {\n        display: 'inline-block',\n        opacity: 1,\n        padding: `0 ${theme.spacing(1)}px`,\n        color: theme.palette.text.hint,\n        '&:hover': {\n          color: theme.palette.text.secondary\n        },\n        '& svg': {\n          width: '0.55em',\n          height: '0.55em',\n          fill: 'currentColor'\n        }\n      }\n    },\n    '& table': {\n      width: '100%',\n      display: 'block',\n      overflowX: 'auto',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      overflow: 'hidden',\n      '& .prop-name': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n      },\n      '& .required': {\n        color: theme.palette.type === 'light' ? '#006500' : '#9bc89b',\n      },\n      '& .prop-type': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n        color: theme.palette.type === 'light' ? '#932981' : '#dbb0d0',\n      },\n      '& .prop-default': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n        borderBottom: `1px dotted ${theme.palette.text.hint}`\n      }\n    },\n    '& thead': {\n      fontSize: 14,\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    '& tbody': {\n      fontSize: 14,\n      lineHeight: 1.5,\n      color: theme.palette.text.primary\n    },\n    '& td': {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: `${theme.spacing(1)}px ${theme.spacing(2)}px ${theme.spacing(1)}px ${\n        theme.spacing(1)\n      }px`,\n      textAlign: 'left',\n    },\n    '& td:last-child': {\n      paddingRight: theme.spacing(3)\n    },\n    '& td compact': {\n      paddingRight: theme.spacing(3)\n    },\n    '& td code': {\n      fontSize: 13,\n      lineHeight: 1.6\n    },\n    '& th': {\n      whiteSpace: 'pre',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      fontWeight: theme.typography.fontWeightMedium,\n      padding: `0 ${theme.spacing(2)}px 0 ${theme.spacing(1)}px`,\n      textAlign: 'left'\n    },\n    '& th:last-child': {\n      paddingRight: theme.spacing(3)\n    },\n    '& tr': {\n      height: 48\n    },\n    '& thead tr': {\n      height: 64\n    },\n    '& strong': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& blockquote': {\n      borderLeft: `5px solid ${theme.palette.text.hint}`,\n      backgroundColor: theme.palette.background.paper,\n      padding: `${theme.spacing(1) / 2}px ${theme.spacing(3)}px`,\n      margin: `${theme.spacing(3)}px 0`\n    },\n    '& a, & a code': {\n      // Style taken from the Link component\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    '& img': {\n      maxWidth: '100%'\n    }\n  }\n});\n\nfunction MarkdownElement(props) {\n  const {\n    classes, className, text, ...other\n  } = props;\n\n  /* eslint-disable react/no-danger */\n  return (\n    <div\n      className={classNames(classes.root, 'markdown-body', className)}\n      dangerouslySetInnerHTML={{ __html: marked(text) }}\n      {...other}\n    />\n  );\n  /* eslint-enable */\n}\n\nMarkdownElement.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  className: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles, { flip: false })(MarkdownElement);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport MarkdownElement from './markdown-element.component';\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: 40,\n    marginLeft: -theme.spacing(2),\n    marginRight: -theme.spacing(2),\n    clear: 'both',\n    [theme.breakpoints.up('sm')]: {\n      padding: `0 ${theme.spacing(1)}px`,\n      marginLeft: 0,\n      marginRight: 0\n    }\n  },\n  demo: theme.mixins.gutters({\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900],\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n      paddingTop: theme.spacing(6)\n    }\n  }),\n  header: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n      flip: false,\n      zIndex: 10,\n      position: 'absolute',\n      top: 2,\n      right: theme.spacing(2)\n    }\n  },\n  code: {\n    display: 'none',\n    padding: 0,\n    margin: 0,\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    },\n    '& pre': {\n      overflow: 'auto',\n      margin: '0px !important',\n      borderRadius: '0px !important'\n    }\n  }\n});\n\n\nclass Demo extends React.Component {\n  state = {\n    codeOpen: false\n  };\n\n  codesandboxForm = null;\n\n  handleClickCodeOpen = () => {\n    this.setState({\n      codeOpen: !this.state.codeOpen\n    });\n  };\n\n  render() {\n    const {\n      classes, index, js: DemoComponent, raw\n    } = this.props;\n    const { codeOpen } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.header}>\n\n          <Tooltip\n            id={`demo-source-${index}`}\n            title={codeOpen ? 'Hide the source' : 'Show the source'}\n            placement=\"top\"\n          >\n            <IconButton onClick={this.handleClickCodeOpen} aria-labelledby={`demo-source-${index}`}>\n              <CodeIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <Collapse in={codeOpen} unmountOnExit>\n          <MarkdownElement dir=\"ltr\" className={classes.code} text={`\\`\\`\\`jsx\\n${raw}\\n\\`\\`\\``} />\n        </Collapse>\n        <div className={classes.demo}>\n          <DemoComponent />\n        </div>\n      </div>\n    );\n  }\n}\n\nDemo.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  index: PropTypes.number.isRequired,\n  js: PropTypes.func.isRequired,\n  raw: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(Demo);\n"],"sourceRoot":""}