{"version":3,"sources":["containers/elements/selection-controls/examples/checkbox-example.js","containers/elements/selection-controls/examples/formgroup-example.js","containers/elements/selection-controls/examples/radio-example.js","containers/elements/selection-controls/examples/radio-simple-example.js","containers/elements/selection-controls/examples/switch-example.js","containers/elements/selection-controls/examples/switch-label-example.js","containers/elements/selection-controls/selection-controls.component.js","containers/elements/selection-controls/examples/checkbox-example-raw.js","containers/elements/selection-controls/examples/formgroup-example-raw.js","containers/elements/selection-controls/examples/radio-example-raw.js","containers/elements/selection-controls/examples/radio-simple-example-raw.js","containers/elements/selection-controls/examples/switch-example-raw.js","containers/elements/selection-controls/examples/switch-label-example-raw.js","components/markdown-element.component.js","components/demo.component.js"],"names":["styles","checked","color","green","Checkboxes","state","checkedA","checkedB","checkedF","checkedG","handleChange","name","event","setState","target","classes","this","props","FormGroup","row","FormControlLabel","control","Checkbox","onChange","value","label","disabled","indeterminate","React","Component","withStyles","CheckboxesGroup","gilad","jason","antoine","FormControl","component","FormLabel","FormHelperText","RadioButtonsGroup","className","root","required","formControl","RadioGroup","aria-label","group","Radio","error","theme","display","margin","spacing","RadioButtons","selectedValue","undefined","bar","backgroundColor","Switches","checkedE","Switch","SwitchLabels","SelectionControls","Grid","container","item","xs","Paper","Typography","variant","gutterBottom","index","js","CheckboxExample","raw","FormgroupExample","RadioExample","RadioSimpleExample","SwitchExample","SwitchLabelExample","renderer","marked","Renderer","setOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","langPrefix","highlight","code","lang","language","prism","languages","diff","css","jsx","fontFamily","typography","fontSize","palette","text","primary","marginTop","position","padding","background","paper","borderRadius","overflow","type","common","white","textShadow","black","lineHeight","display2","secondary","display1","headline","title","wordBreak","opacity","hint","width","height","fill","overflowX","borderCollapse","borderSpacing","borderBottom","fontWeight","fontWeightMedium","divider","textAlign","paddingRight","whiteSpace","borderLeft","main","textDecoration","maxWidth","flip","other","classNames","dangerouslySetInnerHTML","__html","Demo","codeOpen","codesandboxForm","handleClickCodeOpen","DemoComponent","header","Tooltip","id","placement","IconButton","onClick","aria-labelledby","Collapse","in","unmountOnExit","dir","demo","marginBottom","marginLeft","marginRight","clear","breakpoints","up","mixins","gutters","grey","justifyContent","paddingTop","paddingBottom","paddingLeft","zIndex","top","right"],"mappings":"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","file":"static/js/48.780be7da.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = {\n  checked: {\n    color: green[500]\n  }\n};\n\nclass Checkboxes extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: false,\n    checkedF: true,\n    checkedG: true\n  };\n\n  handleChange = name => (event) => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedA}\n              onChange={this.handleChange('checkedA')}\n              value=\"checkedA\"\n            />\n          }\n          label=\"Option A\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedB}\n              onChange={this.handleChange('checkedB')}\n              value=\"checkedB\"\n            />\n          }\n          label=\"Option B\"\n        />\n        <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Option C\" />\n        <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\n        <FormControlLabel\n          disabled\n          control={<Checkbox checked value=\"checkedE\" />}\n          label=\"Disabled\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedF}\n              onChange={this.handleChange('checkedF')}\n              value=\"checkedF\"\n              indeterminate\n            />\n          }\n          label=\"Indeterminate\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedG}\n              onChange={this.handleChange('checkedG')}\n              classes={{\n                checked: classes.checked\n              }}\n              value=\"checkedG\"\n            />\n          }\n          label=\"Custom color\"\n        />\n      </FormGroup>\n    );\n  }\n}\n\nCheckboxes.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(Checkboxes);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = {};\n\nclass CheckboxesGroup extends React.Component {\n  state = {\n    gilad: true,\n    jason: false,\n    antoine: true\n  };\n\n  handleChange = name => (event, checked) => {\n    this.setState({ [name]: checked });\n  };\n\n  render() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.gilad}\n                onChange={this.handleChange('gilad')}\n                value=\"gilad\"\n              />\n            }\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.jason}\n                onChange={this.handleChange('jason')}\n                value=\"jason\"\n              />\n            }\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.antoine}\n                onChange={this.handleChange('antoine')}\n                value=\"antoine\"\n              />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n    );\n  }\n}\n\nCheckboxesGroup.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(CheckboxesGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  group: {\n    margin: `${theme.spacing(1)}px 0`\n  }\n});\n\nclass RadioButtonsGroup extends React.Component {\n  state = {\n    value: ''\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl component=\"fieldset\" required className={classes.formControl}>\n          <FormLabel component=\"legend\">Gender</FormLabel>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender1\"\n            className={classes.group}\n            value={this.state.value}\n            onChange={this.handleChange}\n          >\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n            <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n            <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"Disabled\" />\n          </RadioGroup>\n        </FormControl>\n        <FormControl component=\"fieldset\" required error className={classes.formControl}>\n          <FormLabel component=\"legend\">Gender</FormLabel>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender2\"\n            className={classes.group}\n            value={this.state.value}\n            onChange={this.handleChange}\n          >\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n            <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n            <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"Disabled\" />\n          </RadioGroup>\n          <FormHelperText>You can display an error</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nRadioButtonsGroup.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(RadioButtonsGroup);\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\n\nclass RadioButtons extends React.Component {\n  state = {\n    selectedValue: undefined\n  };\n\n  handleChange = (event) => {\n    this.setState({ selectedValue: event.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Radio\n          checked={this.state.selectedValue === 'a'}\n          onChange={this.handleChange}\n          value=\"a\"\n          name=\"radio button demo\"\n          aria-label=\"A\"\n        />\n        <Radio\n          checked={this.state.selectedValue === 'b'}\n          onChange={this.handleChange}\n          value=\"b\"\n          name=\"radio button demo\"\n          aria-label=\"B\"\n        />\n        <Radio\n          checked={this.state.selectedValue === 'c'}\n          onChange={this.handleChange}\n          value=\"c\"\n          name=\"radio button demo\"\n          aria-label=\"C\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default RadioButtons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = {\n  bar: {},\n  checked: {\n    color: green[500],\n    '& + $bar': {\n      backgroundColor: green[500]\n    }\n  }\n};\n\nclass Switches extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: false,\n    checkedE: true\n  };\n\n  handleChange = name => (event, checked) => {\n    this.setState({ [name]: checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Switch\n          checked={this.state.checkedA}\n          onChange={this.handleChange('checkedA')}\n          aria-label=\"checkedA\"\n        />\n        <Switch\n          checked={this.state.checkedB}\n          onChange={this.handleChange('checkedB')}\n          aria-label=\"checkedB\"\n        />\n        <Switch checked={false} aria-label=\"checkedC\" disabled />\n        <Switch checked aria-label=\"checkedD\" disabled />\n        <Switch\n          classes={{\n            checked: classes.checked,\n            bar: classes.bar\n          }}\n          checked={this.state.checkedE}\n          onChange={this.handleChange('checkedE')}\n          aria-label=\"checkedD\"\n        />\n      </div>\n    );\n  }\n}\n\nSwitches.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(Switches);\n","import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\n\nclass SwitchLabels extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: false\n  };\n\n  render() {\n    return (\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedA}\n              onChange={(event, checked) => this.setState({ checkedA: checked })}\n            />\n          }\n          label=\"A\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedB}\n              onChange={(event, checked) => this.setState({ checkedB: checked })}\n            />\n          }\n          label=\"B\"\n        />\n        <FormControlLabel control={<Switch />} disabled label=\"C\" />\n      </FormGroup>\n    );\n  }\n}\n\nexport default SwitchLabels;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Demo from '../../../components/demo.component';\n\nimport CheckboxExample from './examples/checkbox-example';\nimport CheckboxExampleRaw from './examples/checkbox-example-raw';\n\nimport FormgroupExample from './examples/formgroup-example';\nimport FormgroupExampleRaw from './examples/formgroup-example-raw';\n\nimport RadioExample from './examples/radio-example';\nimport RadioExampleRaw from './examples/radio-example-raw';\n\nimport RadioSimpleExample from './examples/radio-simple-example';\nimport RadioSimpleExampleRaw from './examples/radio-simple-example-raw';\n\nimport SwitchExample from './examples/switch-example';\nimport SwitchExampleRaw from './examples/switch-example-raw';\n\nimport SwitchLabelExample from './examples/switch-label-example';\nimport SwitchLabelExampleRaw from './examples/switch-label-example-raw';\n\nconst SelectionControls = () => (\n  <div>\n    <section className=\"portal-pages__header\">\n      <div className=\"portal-pages__header-demo\">\n        <CheckboxExample />\n      </div>\n    </section>\n    <Grid container spacing={0}>\n      <Grid item xs={1} />\n      <Grid item xs={10}>\n        <Paper className=\"portal-pages__content-inner\">\n          <Typography variant=\"h6\" gutterBottom>Selection Controls</Typography>\n          <p>Selection controls allow the user to select options.</p>\n          <p>Three types of selection controls are covered in this guidance:</p>\n          <ul>\n            <li><strong>Checkboxes</strong> allow the selection of multiple options from a set.</li>\n            <li><strong>Radio buttons</strong> allow the selection of a single option from a set.</li>\n            <li><strong>Switches</strong> allow a selection to be turned on or off.</li>\n          </ul>\n          <h2>Checkboxes</h2>\n          <p>Checkboxes allow the user to select multiple options from a set.</p>\n          <p>\n            If you have multiple options appearing in a list, you can preserve space\n            by using checkboxes instead of on/off switches.\n          </p>\n          <p>If you have a single option, avoid using a checkbox and use an on/off switch instead.</p>\n          <Demo index={1} js={CheckboxExample} raw={CheckboxExampleRaw} />\n          <p><code>FormGroup</code> is a helpful wrapper used to group selection controls components that provides an easier API.</p>\n          <Demo index={2} js={FormgroupExample} raw={FormgroupExampleRaw} />\n          <h2>Radio Buttons</h2>\n          <p>\n            Radio buttons allow the user to select one option from a set. Use radio buttons for exclusive selection\n            if you think that the user needs to see all available options side-by-side.\n          </p>\n          <p>Otherwise, consider a dropdown, which uses less space than displaying all options.</p>\n          <p>\n            <code>RadioGroup</code> is a helpful wrapper used to group <code>Radio</code> components\n            that provides an easier API, and proper keyboard accessibility to the group.\n          </p>\n          <Demo index={3} js={RadioExample} raw={RadioExampleRaw} />\n          <p><code>Radio</code> can also be used standalone, without the wrapper.</p>\n          <Demo index={4} js={RadioSimpleExample} raw={RadioSimpleExampleRaw} />\n          <h2>Switches</h2>\n          <p>\n            On/off switches toggle the state of a single settings option. The option that the switch controls,\n            as well as the state it’s in, should be made clear from the corresponding inline label.\n          </p>\n          <Demo index={5} js={SwitchExample} raw={SwitchExampleRaw} />\n          <p><code>Switch</code> can also be used with a label description thanks to the <code>FormControlLabel</code> component.</p>\n          <Demo index={6} js={SwitchLabelExample} raw={SwitchLabelExampleRaw} />\n        </Paper>\n      </Grid>\n      <Grid item xs={1} />\n    </Grid>\n  </div>\n);\n\nexport default SelectionControls;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = {\n  checked: {\n    color: green[500]\n  }\n};\n\nclass Checkboxes extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: false,\n    checkedF: true,\n    checkedG: true\n  };\n\n  handleChange = name => (event) => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedA}\n              onChange={this.handleChange('checkedA')}\n              value=\"checkedA\"\n            />\n          }\n          label=\"Option A\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedB}\n              onChange={this.handleChange('checkedB')}\n              value=\"checkedB\"\n            />\n          }\n          label=\"Option B\"\n        />\n        <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Option C\" />\n        <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\n        <FormControlLabel\n          disabled\n          control={<Checkbox checked value=\"checkedE\" />}\n          label=\"Disabled\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedF}\n              onChange={this.handleChange('checkedF')}\n              value=\"checkedF\"\n              indeterminate\n            />\n          }\n          label=\"Indeterminate\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedG}\n              onChange={this.handleChange('checkedG')}\n              classes={{\n                checked: classes.checked\n              }}\n              value=\"checkedG\"\n            />\n          }\n          label=\"Custom color\"\n        />\n      </FormGroup>\n    );\n  }\n}\n\nCheckboxes.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(Checkboxes);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = {};\n\nclass CheckboxesGroup extends React.Component {\n  state = {\n    gilad: true,\n    jason: false,\n    antoine: true\n  };\n\n  handleChange = name => (event, checked) => {\n    this.setState({ [name]: checked });\n  };\n\n  render() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.gilad}\n                onChange={this.handleChange('gilad')}\n                value=\"gilad\"\n              />\n            }\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.jason}\n                onChange={this.handleChange('jason')}\n                value=\"jason\"\n              />\n            }\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.antoine}\n                onChange={this.handleChange('antoine')}\n                value=\"antoine\"\n              />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n    );\n  }\n}\n\nCheckboxesGroup.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(CheckboxesGroup);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  group: {\n    margin: \\`\\${theme.spacing(1)}px 0\\`\n  }\n});\n\nclass RadioButtonsGroup extends React.Component {\n  state = {\n    value: ''\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl component=\"fieldset\" required className={classes.formControl}>\n          <FormLabel component=\"legend\">Gender</FormLabel>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender1\"\n            className={classes.group}\n            value={this.state.value}\n            onChange={this.handleChange}\n          >\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n            <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n            <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"Disabled\" />\n          </RadioGroup>\n        </FormControl>\n        <FormControl component=\"fieldset\" required error className={classes.formControl}>\n          <FormLabel component=\"legend\">Gender</FormLabel>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender2\"\n            className={classes.group}\n            value={this.state.value}\n            onChange={this.handleChange}\n          >\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n            <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n            <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"Disabled\" />\n          </RadioGroup>\n          <FormHelperText>You can display an error</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nRadioButtonsGroup.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(RadioButtonsGroup);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport Radio from '@material-ui/core/Radio';\n\nclass RadioButtons extends React.Component {\n  state = {\n    selectedValue: undefined\n  };\n\n  handleChange = (event) => {\n    this.setState({ selectedValue: event.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Radio\n          checked={this.state.selectedValue === 'a'}\n          onChange={this.handleChange}\n          value=\"a\"\n          name=\"radio button demo\"\n          aria-label=\"A\"\n        />\n        <Radio\n          checked={this.state.selectedValue === 'b'}\n          onChange={this.handleChange}\n          value=\"b\"\n          name=\"radio button demo\"\n          aria-label=\"B\"\n        />\n        <Radio\n          checked={this.state.selectedValue === 'c'}\n          onChange={this.handleChange}\n          value=\"c\"\n          name=\"radio button demo\"\n          aria-label=\"C\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default RadioButtons;\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = {\n  bar: {},\n  checked: {\n    color: green[500],\n    '& + \\$bar': {\n      backgroundColor: green[500]\n    }\n  }\n};\n\nclass Switches extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: false,\n    checkedE: true\n  };\n\n  handleChange = name => (event, checked) => {\n    this.setState({ [name]: checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Switch\n          checked={this.state.checkedA}\n          onChange={this.handleChange('checkedA')}\n          aria-label=\"checkedA\"\n        />\n        <Switch\n          checked={this.state.checkedB}\n          onChange={this.handleChange('checkedB')}\n          aria-label=\"checkedB\"\n        />\n        <Switch checked={false} aria-label=\"checkedC\" disabled />\n        <Switch checked aria-label=\"checkedD\" disabled />\n        <Switch\n          classes={{\n            checked: classes.checked,\n            bar: classes.bar\n          }}\n          checked={this.state.checkedE}\n          onChange={this.handleChange('checkedE')}\n          aria-label=\"checkedD\"\n        />\n      </div>\n    );\n  }\n}\n\nSwitches.propTypes = {\n  classes: PropTypes.shape({}).isRequired\n};\n\nexport default withStyles(styles)(Switches);\n`;\n","/*eslint no-useless-escape: 0*/\nexport default `import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\n\nclass SwitchLabels extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: false\n  };\n\n  render() {\n    return (\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedA}\n              onChange={(event, checked) => this.setState({ checkedA: checked })}\n            />\n          }\n          label=\"A\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedB}\n              onChange={(event, checked) => this.setState({ checkedB: checked })}\n            />\n          }\n          label=\"B\"\n        />\n        <FormControlLabel control={<Switch />} disabled label=\"C\" />\n      </FormGroup>\n    );\n  }\n}\n\nexport default SwitchLabels;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport marked from 'marked';\nimport { withStyles } from '@material-ui/core/styles';\nimport prism from 'prismjs';\n\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-diff';\nimport 'prismjs/components/prism-jsx';\n\nimport 'prismjs/themes/prism.css';\n\nconst renderer = new marked.Renderer();\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  // prism uses the following class prefix.\n  langPrefix: 'language-',\n  highlight(code, lang) {\n    let language;\n    switch (lang) {\n    case 'diff':\n      language = prism.languages.diff;\n      break;\n\n    case 'css':\n      language = prism.languages.css;\n      break;\n\n    case 'js':\n    case 'jsx':\n    default:\n      language = prism.languages.jsx;\n      break;\n    }\n    return prism.highlight(code, language);\n  },\n  renderer\n});\n\n// in case we don't import the prism theme, we can use the following JSS\nconst styles = theme => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 16,\n    color: theme.palette.text.primary,\n    '& .anchor-link': {\n      marginTop: -theme.spacing(10), // Offset for the anchor.\n      position: 'absolute'\n    },\n    '& pre, & pre[class*=\"language-\"]': {\n      margin: `${theme.spacing(3)}px 0`,\n      padding: '12px 18px',\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: 3,\n      overflow: 'auto'\n    },\n    '& code[class*=\"language-\"]': {\n      color: theme.palette.type === 'light' ? theme.palette.text.primary : theme.palette.common.white,\n      textShadow: `0 1px ${theme.palette.type === 'light' ? theme.palette.common.white : theme.palette.common.black}`\n    },\n    '& .token.tag': {\n      color: theme.palette.type === 'light' ? '#905' : '#fb83ae'\n    },\n    '& .token.attr-name': {\n      color: theme.palette.type === 'light' ? '#690' : '#a6e22e'\n    },\n    '& p code, & ul code, & pre code': {\n      fontSize: 14,\n      lineHeight: 1.6\n    },\n    '& h1': {\n      ...theme.typography.display2,\n      color: theme.palette.text.secondary,\n      margin: '0.7em 0'\n    },\n    '& h2': {\n      ...theme.typography.display1,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& h3': {\n      ...theme.typography.headline,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& h4': {\n      ...theme.typography.title,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em'\n    },\n    '& p, & ul, & ol': {\n      lineHeight: 1.6\n    },\n    '& h1, & h2, & h3, & h4': {\n      '& code': {\n        fontSize: 'inherit',\n        lineHeight: 'inherit',\n        // Remove scroll on small screens.\n        wordBreak: 'break-word'\n      },\n      '& .anchor-link-style': {\n        opacity: 0,\n        // To prevent the link to get the focus.\n        display: 'none'\n      },\n      '&:hover .anchor-link-style': {\n        display: 'inline-block',\n        opacity: 1,\n        padding: `0 ${theme.spacing(1)}px`,\n        color: theme.palette.text.hint,\n        '&:hover': {\n          color: theme.palette.text.secondary\n        },\n        '& svg': {\n          width: '0.55em',\n          height: '0.55em',\n          fill: 'currentColor'\n        }\n      }\n    },\n    '& table': {\n      width: '100%',\n      display: 'block',\n      overflowX: 'auto',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      overflow: 'hidden',\n      '& .prop-name': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n      },\n      '& .required': {\n        color: theme.palette.type === 'light' ? '#006500' : '#9bc89b',\n      },\n      '& .prop-type': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n        color: theme.palette.type === 'light' ? '#932981' : '#dbb0d0',\n      },\n      '& .prop-default': {\n        fontSize: 13,\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n        borderBottom: `1px dotted ${theme.palette.text.hint}`\n      }\n    },\n    '& thead': {\n      fontSize: 14,\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    '& tbody': {\n      fontSize: 14,\n      lineHeight: 1.5,\n      color: theme.palette.text.primary\n    },\n    '& td': {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: `${theme.spacing(1)}px ${theme.spacing(2)}px ${theme.spacing(1)}px ${\n        theme.spacing(1)\n      }px`,\n      textAlign: 'left',\n    },\n    '& td:last-child': {\n      paddingRight: theme.spacing(3)\n    },\n    '& td compact': {\n      paddingRight: theme.spacing(3)\n    },\n    '& td code': {\n      fontSize: 13,\n      lineHeight: 1.6\n    },\n    '& th': {\n      whiteSpace: 'pre',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      fontWeight: theme.typography.fontWeightMedium,\n      padding: `0 ${theme.spacing(2)}px 0 ${theme.spacing(1)}px`,\n      textAlign: 'left'\n    },\n    '& th:last-child': {\n      paddingRight: theme.spacing(3)\n    },\n    '& tr': {\n      height: 48\n    },\n    '& thead tr': {\n      height: 64\n    },\n    '& strong': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& blockquote': {\n      borderLeft: `5px solid ${theme.palette.text.hint}`,\n      backgroundColor: theme.palette.background.paper,\n      padding: `${theme.spacing(1) / 2}px ${theme.spacing(3)}px`,\n      margin: `${theme.spacing(3)}px 0`\n    },\n    '& a, & a code': {\n      // Style taken from the Link component\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    '& img': {\n      maxWidth: '100%'\n    }\n  }\n});\n\nfunction MarkdownElement(props) {\n  const {\n    classes, className, text, ...other\n  } = props;\n\n  /* eslint-disable react/no-danger */\n  return (\n    <div\n      className={classNames(classes.root, 'markdown-body', className)}\n      dangerouslySetInnerHTML={{ __html: marked(text) }}\n      {...other}\n    />\n  );\n  /* eslint-enable */\n}\n\nMarkdownElement.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  className: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles, { flip: false })(MarkdownElement);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport MarkdownElement from './markdown-element.component';\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: 40,\n    marginLeft: -theme.spacing(2),\n    marginRight: -theme.spacing(2),\n    clear: 'both',\n    [theme.breakpoints.up('sm')]: {\n      padding: `0 ${theme.spacing(1)}px`,\n      marginLeft: 0,\n      marginRight: 0\n    }\n  },\n  demo: theme.mixins.gutters({\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900],\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n      paddingTop: theme.spacing(6)\n    }\n  }),\n  header: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n      flip: false,\n      zIndex: 10,\n      position: 'absolute',\n      top: 2,\n      right: theme.spacing(2)\n    }\n  },\n  code: {\n    display: 'none',\n    padding: 0,\n    margin: 0,\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    },\n    '& pre': {\n      overflow: 'auto',\n      margin: '0px !important',\n      borderRadius: '0px !important'\n    }\n  }\n});\n\n\nclass Demo extends React.Component {\n  state = {\n    codeOpen: false\n  };\n\n  codesandboxForm = null;\n\n  handleClickCodeOpen = () => {\n    this.setState({\n      codeOpen: !this.state.codeOpen\n    });\n  };\n\n  render() {\n    const {\n      classes, index, js: DemoComponent, raw\n    } = this.props;\n    const { codeOpen } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.header}>\n\n          <Tooltip\n            id={`demo-source-${index}`}\n            title={codeOpen ? 'Hide the source' : 'Show the source'}\n            placement=\"top\"\n          >\n            <IconButton onClick={this.handleClickCodeOpen} aria-labelledby={`demo-source-${index}`}>\n              <CodeIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <Collapse in={codeOpen} unmountOnExit>\n          <MarkdownElement dir=\"ltr\" className={classes.code} text={`\\`\\`\\`jsx\\n${raw}\\n\\`\\`\\``} />\n        </Collapse>\n        <div className={classes.demo}>\n          <DemoComponent />\n        </div>\n      </div>\n    );\n  }\n}\n\nDemo.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  index: PropTypes.number.isRequired,\n  js: PropTypes.func.isRequired,\n  raw: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(Demo);\n"],"sourceRoot":""}